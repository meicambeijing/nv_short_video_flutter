#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef NVSHORTVIDEOCORE_SWIFT_H
#define NVSHORTVIDEOCORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreMedia;
@import Foundation;
@import NvStreamingSdkCore;
@import ObjectiveC;
@import UIKit;
#endif

#import <NvShortVideoCore/NvShortVideoCore.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NvShortVideoCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


SWIFT_CLASS("_TtC16NvShortVideoCore22MeicamControlPointPair")
@interface MeicamControlPointPair : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore27MeicamControlPointParamPair")
@interface MeicamControlPointParamPair : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore8MeicamFx")
@interface MeicamFx : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC16NvShortVideoCore18MeicamFxCurveParam")
@interface MeicamFxCurveParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore13MeicamFxParam")
@interface MeicamFxParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, MeicamMediaType, open) {
  MeicamMediaTypeUnknown = 0,
  MeicamMediaTypeImage = 1,
  MeicamMediaTypeVideo = 2,
  MeicamMediaTypeAudio = 3,
};



/// 调整数据模型 / Adjust Color Model
SWIFT_CLASS("_TtC16NvShortVideoCore18NvAdjustColorModel")
@interface NvAdjustColorModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface NvAdjustColorModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore13NvAdjustModel")
@interface NvAdjustModel : NvAdjustColorModel
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvAdjustModel (SWIFT_EXTENSION(NvShortVideoCore))
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


@class PHAsset;

SWIFT_CLASS("_TtC16NvShortVideoCore12NvAlbumAsset")
@interface NvAlbumAsset : NSObject
@property (nonatomic, strong) PHAsset * _Nullable asset;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvAlbumItem")
@interface NvAlbumItem : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;
@class NSString;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC16NvShortVideoCore27NvAlbumNavigationController")
@interface NvAlbumNavigationController : UINavigationController
- (void)viewDidLoad;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvAlbumTemplateItem")
@interface NvAlbumTemplateItem : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvAlbumTool")
@interface NvAlbumTool : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NvAlbumViewController;
@class UIView;

SWIFT_PROTOCOL("_TtP16NvShortVideoCore29NvAlbumViewControllerDelegate_")
@protocol NvAlbumViewControllerDelegate
@optional
/// Tells delegate to receive the array of NvAlbumAsset after click the bottom button
/// remark:
/// 点击底部按钮触发的回调将所有被选择的assets传出去
/// 
/// note:
/// The delegate will not response if the bottom button is custom
/// \param controller NvAlbumViewController
///
/// \param assets the data selected form album
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller selectAlbum:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
/// Tells delgate to update the current data selected form album after click the cell or the button of selected
/// option
/// remark:
/// 每次点击cell或者点击全选取消反选都会掉用，将更新后的assets传出去
/// 
/// \param controller NvAlbumViewController
///
/// \param assets the data selected from album
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller didSelectAlbum:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
/// Tells delegate to update the data selected form album, and the count of assets has exceed the maximum limit.
/// remark:
/// 点击相册超过最大限制数量，将所有被选择的assets传出去
/// 
/// note:
/// The delegate will response if the count of assets has exceed the maximum limit
/// \param controller NvAlbumViewController
///
/// \param assets the data selected from album
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller selectAlbumAssetsOverMaxCountLimit:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
/// Tells delegate to update the data selected form album, and the count of assets is lower than the minimum limit.
/// remark:
/// 点击相册低过最小限制数量，自定义按钮的话不会触发此回调，将所有被选择的assets传出去
/// 
/// note:
/// The delegate will not response if the bottom button is custom
/// \param controller NvAlbumViewController
///
/// \param assets the data selected from album
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller selectAlbumAssetsUnderMinCountLimit:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
/// Tells delegate to dismiss or pop the NvAlbumViewController
/// remark:
/// 返回按钮触发的回调
/// 
/// \param controller NvAlbumViewController
///
- (void)nvAlbumViewControllerCancelClickWithController:(NvAlbumViewController * _Nonnull)controller;
/// Asks the delegate to get the button for bottom view
/// remark:
/// 自定义底部按钮的回调
/// 
- (UIView * _Nonnull)nvAlbumViewControllerCustomBottomButton SWIFT_WARN_UNUSED_RESULT;
/// Tells delegate to reveive the array of NvAlbumTemplateItem,
/// remark:
/// 通用模板导入素材的回调,hiddenTemplateView为false，才会显示模版导入视图
/// 
/// note:
/// The delegate will response if the value of hiddenTemplateView is false
/// \param controller NvAlbumViewController
///
/// \param templates the data selected from album
///
/// \param supportedRatio 0
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller selectTemplates:(NSArray<NvAlbumTemplateItem *> * _Nonnull)templates supportedRatio:(NSInteger)supportedRatio;
/// AutoCut delegate
/// <ul>
///   <li>
///     Parameters: 相册选完素材，开始一键成片
///     <ul>
///       <li>
///         controller: NvAlbumViewController
///       </li>
///       <li>
///         assets: the data selected from album
///       </li>
///     </ul>
///   </li>
/// </ul>
- (void)nvAlbumViewControllerAutoCutWithController:(NvAlbumViewController * _Nonnull)controller selectAlbum:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
@end


@interface NvAlbumTool (SWIFT_EXTENSION(NvShortVideoCore)) <NvAlbumViewControllerDelegate>
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller selectAlbum:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
- (void)nvAlbumViewControllerCancelClickWithController:(NvAlbumViewController * _Nonnull)_;
@end

enum NvSelectAssetType : NSInteger;

SWIFT_CLASS("_TtC16NvShortVideoCore21NvAlbumViewController")
@interface NvAlbumViewController : UIViewController
@property (nonatomic, weak) id <NvAlbumViewControllerDelegate> _Nullable delegate;
@property (nonatomic) enum NvSelectAssetType selectAssetType;
@property (nonatomic, copy) NSString * _Nonnull viewTag;
@property (nonatomic) BOOL mutableSelect;
@property (nonatomic) BOOL isSupport4K;
@property (nonatomic) BOOL isSupportHDR;
@property (nonatomic) BOOL isDisableHighFrameRate;
@property (nonatomic) NSInteger maxSelectCount;
@property (nonatomic) BOOL hiddenSelectAll;
@property (nonatomic, copy) NSArray<NvAlbumTemplateItem *> * _Nonnull templateClips;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull templateSupportRations;
/// 支持的比例
@property (nonatomic, copy) NSString * _Nonnull templateDefaultRation;
@property (nonatomic) CGFloat bottomLineWidth;
/// 这里对应不同的底部样式
/// 1=标准样式（带有一键成片按钮）
/// 2=标准模版和ae模版
/// 3=自适应时长模版
/// 4=一键成片，合拍也选用这个模式
/// Here correspond to different bottom styles
/// 1= Standard style (with one click to piece button)
/// 2= Standard templates and ae templates
/// 3= adaptive duration template, one click to film
/// 4= One click to make a piece，This mode is also used in synchro
@property (nonatomic) NSInteger categoryType;
@property (nonatomic) BOOL hiddenAutoCut;
@property (nonatomic, copy) NSString * _Nullable projectId;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithLimitDuration:(BOOL)limitDuration OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLoad;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface NvAlbumViewController (SWIFT_EXTENSION(NvShortVideoCore)) <NvThemeElement>
- (NSDictionary * _Nonnull)themeElements SWIFT_WARN_UNUSED_RESULT;
@end



@class UIScrollView;

@interface NvAlbumViewController (SWIFT_EXTENSION(NvShortVideoCore)) <UIScrollViewDelegate>
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)_ withVelocity:(CGPoint)_ targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvAnimationModel")
@interface NvAnimationModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore14NvAssetInstall")
@interface NvAssetInstall : NSObject <NvsAssetPackageManagerDelegate>
- (void)didFinishAssetPackageInstallation:(NSString * _Null_unspecified)assetPackageId filePath:(NSString * _Null_unspecified)_ type:(NvsAssetPackageType)_ error:(NvsAssetPackageManagerError)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvAudioClipCommand")
@interface NvAudioClipCommand : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC16NvShortVideoCore16NvAudioClipModel")
@interface NvAudioClipModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvAudioClipModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end




SWIFT_CLASS("_TtC16NvShortVideoCore26NvAudioClipTransitionParam")
@interface NvAudioClipTransitionParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore22NvAudioClipUpdateParam")
@interface NvAudioClipUpdateParam : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvBackgroundFxModel")
@interface NvBackgroundFxModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore28NvBaseTemplateViewController")
@interface NvBaseTemplateViewController : UIViewController
- (void)viewDidLoad;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIGestureRecognizer;

@interface NvBaseTemplateViewController (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvEventView")
@interface NvEventView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore16NvBottomMenuView")
@interface NvBottomMenuView : NvEventView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end



@class UICollectionView;
@class NSIndexPath;
@class UICollectionViewCell;

@interface NvBottomMenuView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)_ numberOfItemsInSection:(NSInteger)_ SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)_ didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore13NvEventObject")
@interface NvEventObject : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore22NvBottomPopViewManager")
@interface NvBottomPopViewManager : NvEventObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvBuiltinFxModel")
@interface NvBuiltinFxModel : MeicamFx
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvCaptionModel")
@interface NvCaptionModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvCaptionModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore14NvClipAddParam")
@interface NvClipAddParam : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvClipCopyParam")
@interface NvClipCopyParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvClipFxUpdateInfo")
@interface NvClipFxUpdateInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvClipMoveParam")
@interface NvClipMoveParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvClipReplaceParam")
@interface NvClipReplaceParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore16NvClipSplitParam")
@interface NvClipSplitParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvClipUpdateParam")
@interface NvClipUpdateParam : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvClipVolumeParam")
@interface NvClipVolumeParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC16NvShortVideoCore10NvRectView")
@interface NvRectView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)layoutSubviews;
- (void)drawRect:(CGRect)_;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore23NvRotationScaleRectView")
@interface NvRotationScaleRectView : NvRectView
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore23NvCloseRotationRectView")
@interface NvCloseRotationRectView : NvRotationScaleRectView
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvComCaptionModel")
@interface NvComCaptionModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvComCaptionModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvCommandManager")
@interface NvCommandManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore27NvCompoundCaptionIndexModel")
@interface NvCompoundCaptionIndexModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvCompoundCaptionIndexModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvCoverInfo")
@interface NvCoverInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvCropperBottomView")
@interface NvCropperBottomView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore16NvTransformModel")
@interface NvTransformModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvCropperModel")
@interface NvCropperModel : NvTransformModel
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore17NvCropperRectView")
@interface NvCropperRectView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvCropperRectView (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)_ shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvCropperScrollView")
@interface NvCropperScrollView : UIView <UIScrollViewDelegate>
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end




@class NvsTimeline;

@interface NvCropperScrollView (SWIFT_EXTENSION(NvShortVideoCore)) <NvsStreamingContextDelegate>
- (void)didPlaybackTimelinePosition:(NvsTimeline * _Null_unspecified)timeline position:(int64_t)position;
- (void)didPlaybackEOF:(NvsTimeline * _Null_unspecified)_;
- (void)didStreamingEngineStateChanged:(NvsStreamingEngineState)state;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore23NvCropperViewController")
@interface NvCropperViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)loadView;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end





@interface NvCropperViewController (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)_ numberOfItemsInSection:(NSInteger)_ SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvCurveSpeedModel")
@interface NvCurveSpeedModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvDoubleSlider")
@interface NvDoubleSlider : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end



@interface NvDoubleSlider (SWIFT_EXTENSION(NvShortVideoCore))
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvEditAlertView")
@interface NvEditAlertView : UIView
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




@interface NvEditAlertView (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)_ shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end

@class UIImage;

SWIFT_CLASS("_TtC16NvShortVideoCore12NvEditButton")
@interface NvEditButton : UIButton
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (void)layoutSubviews;
- (void)setImage:(UIImage * _Nullable)image forState:(UIControlState)state;
- (void)setTitle:(NSString * _Nullable)title forState:(UIControlState)state;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore14NvEditFileItem")
@interface NvEditFileItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull filePath;
@property (nonatomic, strong) PHAsset * _Nullable albumAsset;
@property (nonatomic) double speed;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NvsStreamingContext;
@class NvsFx;
@protocol NvEditManagerDelegate;

SWIFT_CLASS("_TtC16NvShortVideoCore13NvEditManager")
@interface NvEditManager : NSObject
@property (nonatomic, readonly, strong) NvsStreamingContext * _Nonnull streamingContext;
@property (nonatomic, readonly, strong) NvsTimeline * _Nonnull timeline;
@property (nonatomic) BOOL autoPlayWhenBecomeActive;
@property (nonatomic) BOOL inPreviewRange;
@property (nonatomic, readonly) int64_t currentTime;
@property (nonatomic) CGFloat frameRate;
@property (nonatomic, readonly) NvsStreamingEngineState engineState;
@property (nonatomic, strong) NvsFx * _Nullable selectedFx;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)appendSeekBlockWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)appendDelegate:(id <NvEditManagerDelegate> _Nonnull)delegate;
- (void)removeDelegate:(id <NvEditManagerDelegate> _Nonnull)delegate;
- (void)addObservers;
- (void)removeObserver;
- (void)playWithClean:(BOOL)clean;
- (void)play;
- (void)replay;
- (void)previewWithStart:(int64_t)start end:(int64_t)end;
- (void)refreshWithClean:(BOOL)clean;
- (void)refresh;
- (void)seekTimelineWithPosition:(int64_t)position;
- (void)clearCachedResources;
- (NSString * _Nullable)compileCurrentTimeline SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvEditManager (SWIFT_EXTENSION(NvShortVideoCore)) <NvsStreamingContextDelegate>
- (void)didCompileCompleted:(NvsTimeline * _Null_unspecified)timeline isHardwareEncoding:(BOOL)isHardwareEncoding errorType:(int32_t)errorType errorString:(NSString * _Null_unspecified)errorString flags:(int32_t)flags;
- (void)didCompileProgress:(NvsTimeline * _Null_unspecified)_ progress:(int32_t)progress;
- (void)didStreamingEngineStateChanged:(NvsStreamingEngineState)state;
- (void)didSeekingTimelinePosition:(NvsTimeline * _Nonnull)timeline position:(int64_t)position;
- (void)didPlaybackTimelinePosition:(NvsTimeline * _Nonnull)timeline position:(int64_t)position;
- (void)didPlaybackEOF:(NvsTimeline * _Nonnull)timeline;
@end

@class NvEditMusicFileItem;

@interface NvEditManager (SWIFT_EXTENSION(NvShortVideoCore))
+ (void)prepareProEditEnv;
+ (void)exitProEdit;
+ (void)openProjectWithProjectId:(NSString * _Nonnull)projectId;
+ (BOOL)newProjectWithFiles:(NSArray<NvEditFileItem *> * _Nonnull)files music:(NvEditMusicFileItem * _Nullable)music projectId:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NvEditMode editMode;)
+ (NvEditMode)editMode SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvEditManager (SWIFT_EXTENSION(NvShortVideoCore))
@property (nonatomic, readonly) BOOL effectNeedProEdit;
@property (nonatomic) float recordTrackVolume;
- (NSString * _Nonnull)filePathForAudio SWIFT_WARN_UNUSED_RESULT;
- (void)startRecordPlayWithEnd:(int64_t)end;
- (void)endRecordPlay;
@end

@class NvRecognitionTextItem;
@class NvRecognitionTextEditItem;
@class NvImageCaptionModel;

@interface NvEditManager (SWIFT_EXTENSION(NvShortVideoCore))
@property (nonatomic, readonly, copy) NSString * _Nonnull audioComilePath;
- (NvsTimeline * _Nullable)timelineForAutoCaptionWithContext:(NvsStreamingContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL hasRecognition;
- (void)removeAllRecognitionCaptions;
- (void)removeRecognitionWithItemIndicate:(NSString * _Nonnull)itemIndicate;
- (void)addRecognitionWithCaptions:(NSArray<NvRecognitionTextItem *> * _Nonnull)captions languageIdentifier:(NSString * _Nullable)languageIdentifier;
- (NSArray<NvRecognitionTextEditItem *> * _Nonnull)recognitionEditCaptions SWIFT_WARN_UNUSED_RESULT;
- (void)recoverRecognitionWithCaptions:(NSArray<NvRecognitionTextEditItem *> * _Nonnull)captions;
- (NvImageCaptionModel * _Nullable)recognitionStyle SWIFT_WARN_UNUSED_RESULT;
- (void)recognitionApplyWithModel:(NvImageCaptionModel * _Nullable)model;
- (void)recognitionApplyWithColor:(NSString * _Nonnull)color;
- (void)recognitionApplyWithStyle:(NvImageCaptionStyle)style;
- (void)recognitionApplyWithFontPath:(NSString * _Nullable)fontPath fontUuid:(NSString * _Nullable)fontUuid fontFamily:(NSString * _Nullable)fontFamily;
- (void)scaleRecognitionCaption:(float)scale;
- (void)translateRecognitionCaption:(CGPoint)translationOffset;
@end

@class NvsTimelineAnimatedSticker;
@class NvsTimelineCaption;
@class NvsThumbnailSequenceDesc;

@interface NvEditManager (SWIFT_EXTENSION(NvShortVideoCore))
@property (nonatomic, readonly) BOOL available;
- (void)resumeTask;
- (void)setFetchWithCompletion:(void (^ _Nonnull)(BOOL))completion;
@property (nonatomic, readonly, copy) NSString * _Nonnull projectId;
@property (nonatomic, readonly, copy) NSString * _Nullable editVideoFxPackageId;
- (BOOL)applyFilterWithPackageId:(NSString * _Nullable)packageId builtin:(BOOL)builtin filterName:(NSString * _Nullable)filterName intensity:(float)intensity SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) float filterIntensity;
- (void)deleteDragFx:(NvsFx * _Nonnull)fx;
- (void)syncStickerData:(NvsTimelineAnimatedSticker * _Nonnull)sticker;
- (void)syncCaptionData:(NvsTimelineCaption * _Nonnull)caption;
- (NvsTimelineAnimatedSticker * _Nullable)addSticker:(NSString * _Nonnull)uuid cover:(NSString * _Nonnull)cover SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Nullable bultinVideoTypeFxName;
@property (nonatomic) float originalTrackVolume;
@property (nonatomic) BOOL muteOriginal;
@property (nonatomic) BOOL muteMusic;
@property (nonatomic) float musicTrackVolume;
- (NSArray<NvsThumbnailSequenceDesc *> * _Nonnull)videoTrackDesc SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL editMusicLoop;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable editMusicInfo;
- (BOOL)enableMusicWithMusicPath:(NSString * _Nullable)musicPath musicName:(NSString * _Nullable)musicName musicId:(NSString * _Nullable)musicId trimIn:(int64_t)trimIn SWIFT_WARN_UNUSED_RESULT;
- (NvsTimelineAnimatedSticker * _Nullable)updateCaptionWithImageModel:(NvImageCaptionModel * _Nonnull)imageModel sticker:(NvsTimelineAnimatedSticker * _Nullable)sticker backupTextViewWidth:(CGFloat)backupTextViewWidth currentTextViewWidth:(CGFloat)currentTextViewWidth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)saveProjectWithImage:(UIImage * _Nonnull)image SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP16NvShortVideoCore21NvEditManagerDelegate_")
@protocol NvEditManagerDelegate
@optional
- (void)didSeekingTimelinePosition:(NvsTimeline * _Nonnull)timeline position:(int64_t)position;
- (void)didPlaybackTimelinePosition:(NvsTimeline * _Nonnull)timeline position:(int64_t)position;
- (void)didPlaybackEOF:(NvsTimeline * _Nonnull)timeline;
- (void)didStreamingEngineStateChanged:(NvsStreamingEngineState)state;
- (void)didCompileCompleted:(NvsTimeline * _Nonnull)timeline isHardwareEncoding:(BOOL)isHardwareEncoding errorType:(int32_t)errorType errorString:(NSString * _Nullable)errorString flags:(int32_t)flags;
- (void)didCompileFloatProgressWithProgress:(float)progress;
- (void)didChangedEditMusicWithMusic:(NSString * _Nullable)music;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvEditMusicFileItem")
@interface NvEditMusicFileItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull musicPath;
@property (nonatomic) int64_t trimIn;
@property (nonatomic) int64_t trimOut;
@property (nonatomic, copy) NSString * _Nonnull musicName;
@property (nonatomic, copy) NSString * _Nonnull musicId;
@property (nonatomic) BOOL loop;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore13NvEffectModel")
@interface NvEffectModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface NvEffectModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


@class UIColor;
@class UIImageView;
@class NvsMultiThumbnailSequenceView;

SWIFT_CLASS("_TtC16NvShortVideoCore17NvSingleTrackView")
@interface NvSingleTrackView : UIView
@property (nonatomic, readonly, strong) UIView * _Nonnull timeTagView;
@property (nonatomic, strong) UIColor * _Nonnull clipBorderColor;
@property (nonatomic) CGFloat clipBorderWidth;
@property (nonatomic) CGFloat handleMinimumDistance;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull leftHandleView;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull rightHandleView;
@property (nonatomic, readonly, strong) NvsMultiThumbnailSequenceView * _Nonnull squenceView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)updateCenterTime:(int64_t)centerTime animation:(BOOL)animation;
- (void)configViewDataWithTimelineDuration:(int64_t)timelineDuration thumbnailAspectRatio:(CGFloat)thumbnailAspectRatio descs:(NSArray<NvsThumbnailSequenceDesc *> * _Nonnull)descs;
- (void)startEditItem;
- (void)deselect;
- (void)reload;
@end

@class NvTimeVideoFxDataSource;

SWIFT_CLASS("_TtC16NvShortVideoCore17NvEffectTrackView")
@interface NvEffectTrackView : NvSingleTrackView
@property (nonatomic, strong) NvTimeVideoFxDataSource * _Null_unspecified fxDataSource;
@property (nonatomic) int64_t edgeTime;
- (nonnull instancetype)initWithFrame:(CGRect)frame editManager:(NvEditManager * _Nonnull)editManager OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NvsLiveWindow;

SWIFT_PROTOCOL("_TtP16NvShortVideoCore29NvEffectTransitioningProtocal_")
@protocol NvEffectTransitioningProtocal <NSObject>
- (CGRect)liveWindowFrame SWIFT_WARN_UNUSED_RESULT;
- (void)receiveWithLiveWindow:(NvsLiveWindow * _Nonnull)liveWindow;
@property (nonatomic, readonly, strong) NvsLiveWindow * _Nullable liveWindow;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore25NvEventCollectionViewCell")
@interface NvEventCollectionViewCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC16NvShortVideoCore21NvEventViewController")
@interface NvEventViewController : UIViewController
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLoad;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvEventViewController (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvFileConvertor")
@interface NvFileConvertor : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvFileConvertor (SWIFT_EXTENSION(NvShortVideoCore)) <NvsMediaFileConvertorDelegate>
- (void)didConvertorProgress:(int64_t)taskId progress:(float)progress;
- (void)didConvertorFinish:(int64_t)taskId sourceFile:(NSString * _Null_unspecified)_ outputFile:(NSString * _Null_unspecified)dst errorCode:(NvsMediaConvertorErrorType)error;
- (void)didAudioMuteRage:(int64_t)_ muteStart:(int64_t)_ muteEnd:(int64_t)_;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvFileDownloadTask")
@interface NvFileDownloadTask : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSession;
@class NSURLSessionDownloadTask;
@class NSURL;

@interface NvFileDownloadTask (SWIFT_EXTENSION(NvShortVideoCore)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)_ downloadTask:(NSURLSessionDownloadTask * _Nonnull)_ didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)_ downloadTask:(NSURLSessionDownloadTask * _Nonnull)_ didWriteData:(int64_t)_ totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)_ downloadTask:(NSURLSessionDownloadTask * _Nonnull)_ didResumeAtOffset:(int64_t)_ expectedTotalBytes:(int64_t)_;
@end

typedef SWIFT_ENUM(NSInteger, NvFileSourceType, open) {
  NvFileSourceTypeFile = 0,
  NvFileSourceTypeAlbum = 1,
  NvFileSourceTypeBundleFile = 2,
  NvFileSourceTypeMediaLibrary = 3,
};


SWIFT_CLASS("_TtC16NvShortVideoCore13NvFilterModel")
@interface NvFilterModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvFilterModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore22NvFxCommandUpdateParam")
@interface NvFxCommandUpdateParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvFxUpdateItem")
@interface NvFxUpdateItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore10NvGCDGroup")
@interface NvGCDGroup : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore12NvIconGetter")
@interface NvIconGetter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NvIconGetter (SWIFT_EXTENSION(NvShortVideoCore)) <NvsIconGeneratorDelegate>
- (void)didIconReady:(UIImage * _Nullable)icon timestamp:(int64_t)_ taskId:(int64_t)taskId;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvImageCaptionModel")
@interface NvImageCaptionModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull imagePath;
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic) NvImageCaptionStyle imageCaptionStyle;
@property (nonatomic, copy) NSString * _Nullable fontUuid;
@property (nonatomic, copy) NSString * _Nullable fontFamily;
@property (nonatomic, copy) NSString * _Nullable fontPath;
@property (nonatomic, copy) NSString * _Nonnull colorString;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NvImageCaptionModel * _Nonnull)deepCopy SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvKeyframeCommand")
@interface NvKeyframeCommand : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end














SWIFT_CLASS("_TtC16NvShortVideoCore20NvKeyframeUpdateInfo")
@interface NvKeyframeUpdateInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore20NvKeyframeUpdateItem")
@interface NvKeyframeUpdateItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore10NvLineTool")
@interface NvLineTool : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvMaskModel")
@interface NvMaskModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvMaskOperator")
@interface NvMaskOperator : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvMaskRectView")
@interface NvMaskRectView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface NvMaskRectView (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore21NvMaskRectViewManager")
@interface NvMaskRectViewManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvMaskRegionInfo")
@interface NvMaskRegionInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvMenuOperator")
@interface NvMenuOperator : NvEventObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol PageEventHandleable;

SWIFT_CLASS("_TtC16NvShortVideoCore17NvPageContentView")
@interface NvPageContentView : UIView
@property (nonatomic, weak) id <PageEventHandleable> _Nullable eventHandler;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@class PageTitleView;

SWIFT_PROTOCOL("_TtP16NvShortVideoCore21PageTitleViewDelegate_")
@protocol PageTitleViewDelegate
@optional
/// DNSPageView的事件回调处理者
/// Event callback handler for DNSPageView
@property (nonatomic, readonly, strong) id <PageEventHandleable> _Nullable eventHandler;
@required
- (void)titleView:(PageTitleView * _Nonnull)titleView didSelectAt:(NSInteger)index;
@end


@interface NvPageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <PageTitleViewDelegate>
- (void)titleView:(PageTitleView * _Nonnull)titleView didSelectAt:(NSInteger)index;
@end


@interface NvPageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvPageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore10NvPageView")
@interface NvPageView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore17NvPageViewManager")
@interface NvPageViewManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC16NvShortVideoCore8NvPlayer")
@interface NvPlayer : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC16NvShortVideoCore13NvPluginModel")
@interface NvPluginModel : NvBuiltinFxModel
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvPluginModel (SWIFT_EXTENSION(NvShortVideoCore))
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvPointTool")
@interface NvPointTool : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol UIViewControllerAnimatedTransitioning;

SWIFT_CLASS("_TtC16NvShortVideoCore22NvProEditTransitioning")
@interface NvProEditTransitioning : NSObject <UINavigationControllerDelegate>
- (id <UIViewControllerAnimatedTransitioning> _Nullable)navigationController:(UINavigationController * _Nonnull)navigationController animationControllerForOperation:(UINavigationControllerOperation)operation fromViewController:(UIViewController * _Nonnull)fromVC toViewController:(UIViewController * _Nonnull)toVC SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NvProEditType, open) {
  NvProEditTypeNone = 0,
  NvProEditTypeEffect = 1,
  NvProEditTypeRecord = 2,
};


SWIFT_CLASS("_TtC16NvShortVideoCore27NvVideoEditorViewController")
@interface NvVideoEditorViewController : NvEventViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore23NvProEditViewController")
@interface NvProEditViewController : NvVideoEditorViewController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)leftNavButtonClickWithButton:(UIButton * _Nonnull)button;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class NvVolumeView;

SWIFT_PROTOCOL("_TtP16NvShortVideoCore20NvVolumeViewDelegate_")
@protocol NvVolumeViewDelegate
@optional
- (void)volumeViewTapViewWithVolumeView:(NvVolumeView * _Nonnull)volumeView enable:(BOOL)enable;
@end


@interface NvProEditViewController (SWIFT_EXTENSION(NvShortVideoCore)) <NvVolumeViewDelegate>
- (void)volumeViewTapViewWithVolumeView:(NvVolumeView * _Nonnull)_ enable:(BOOL)_;
@end






SWIFT_CLASS("_TtC16NvShortVideoCore32NvProfessionalEditViewController")
@interface NvProfessionalEditViewController : NvProEditViewController
@property (nonatomic, readonly, strong) NvProEditTransitioning * _Nonnull transition;
- (nonnull instancetype)initWithType:(enum NvProEditType)type OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)leftNavButtonClickWithButton:(UIButton * _Nonnull)button;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvProgressView")
@interface NvProgressView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore13NvProjectInfo")
@interface NvProjectInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NvTimelineModel;

SWIFT_CLASS("_TtC16NvShortVideoCore16NvProjectManager")
@interface NvProjectManager : NSObject
/// File Name
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull projectInfoJson;)
+ (NSString * _Nonnull)projectInfoJson SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull projectDataJson;)
+ (NSString * _Nonnull)projectDataJson SWIFT_WARN_UNUSED_RESULT;
/// Get the path for saved peoject folder
/// remark:
/// 草稿保存文件夹路径
///
/// returns:
/// the folder path of draft
+ (NSString * _Nonnull)projectPath SWIFT_WARN_UNUSED_RESULT;
/// Get the project path by projectId
/// remark:
/// 根据projectId 获取某一草稿的绝对路径
/// \param projectId the identifier of draft
///
///
/// returns:
/// the draft absolute path
+ (NSString * _Nonnull)projectLocalPathWithProjectId:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
/// Write the timeline detail info to json file as draft
/// remark:
/// 缓存timeline草稿
/// \param model the data structure of timeline
///
/// \param callBack callback the result of saved timeline
///
+ (void)storeTimelineDataWithModel:(NvTimelineModel * _Nonnull)model sync:(BOOL)sync waitUntilFinished:(BOOL)waitUntilFinished callBack:(void (^ _Nonnull)(BOOL))callBack;
+ (BOOL)storeCurrentProjectWithProjectId:(NSString * _Nonnull)projectId projectDescription:(NSString * _Nonnull)projectDescription SWIFT_WARN_UNUSED_RESULT;
/// Saves the project information file for reading the draft list
/// 保存用于草稿列表读取的项目信息文件
+ (NvProjectInfo * _Nonnull)updateProjectInfoFileWithProjectId:(NSString * _Nonnull)projectId duration:(int64_t)duration projectDescription:(NSString * _Nullable)projectDescription lastModifiedTime:(NSString * _Nullable)lastModifiedTime SWIFT_WARN_UNUSED_RESULT;
+ (void)resetProjectInfoFileWithInfoModel:(NvProjectInfo * _Nonnull)infoModel;
+ (NvTimelineModel * _Nullable)fetchTimelineModelWithProjectId:(NSString * _Nonnull)projectId dir:(NSString * _Nullable)dir SWIFT_WARN_UNUSED_RESULT;
+ (NvTimelineModel * _Nullable)readTimelineModelWithJsonPath:(NSString * _Nonnull)jsonPath projectId:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
+ (NvProjectInfo * _Nullable)fetchProjectInfoWithProjectId:(NSString * _Nonnull)projectId dir:(NSString * _Nullable)dir SWIFT_WARN_UNUSED_RESULT;
/// Get the list of Drafts
/// remark:
/// 获取项目列表
///
/// returns:
/// array for the data structure of timeline
+ (NSArray<NvProjectInfo *> * _Nonnull)projectList SWIFT_WARN_UNUSED_RESULT;
+ (void)cleanProjectFilesWithProjects:(NSArray<NSString *> * _Nonnull)projects;
/// Delete the project and the folder saved project info.json
/// remark:
/// delete project及文件夹
/// \param model the info of timeline
///
///
/// returns:
/// true means success to delete the project
+ (BOOL)deleteProjectWithModel:(NvProjectInfo * _Nonnull)model;
+ (BOOL)deleteWithProjectId:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
/// Copy new project form the timeline info
/// remark:
/// copy project
/// \param model the info of timeline
///
///
/// returns:
/// true means success to copy the project
+ (NSString * _Nullable)copyProjectWithProjectId:(NSString * _Nonnull)projectId targetDir:(NSString * _Nullable)targetDir;
+ (NSString * _Nullable)updateCoverWithImage:(UIImage * _Nonnull)image projectId:(NSString * _Nonnull)projectId;
+ (NSString * _Nonnull)projectCoverImagePathWithProjectId:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore27NvPropertyBackgroundFxModel")
@interface NvPropertyBackgroundFxModel : NvBackgroundFxModel
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore25NvRecognitionTextEditItem")
@interface NvRecognitionTextEditItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull itemIndicate;
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, copy) NSString * _Nullable editText;
@property (nonatomic) int64_t inPoint;
@property (nonatomic) int64_t outPoint;
@property (nonatomic) CGFloat speechSpeed;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvRecordDataSource")
@interface NvRecordDataSource : NSObject
@property (nonatomic, copy) NSString * _Nullable recordingPath;
- (nonnull instancetype)initWithEditManager:(NvEditManager * _Nonnull)editManager OBJC_DESIGNATED_INITIALIZER;
- (BOOL)recordAvailable:(NSRange)checkRange SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasClipWithPosition:(int64_t)position SWIFT_WARN_UNUSED_RESULT;
- (void)deleteClip:(int64_t)position;
- (int64_t)recordEndTime:(int64_t)position SWIFT_WARN_UNUSED_RESULT;
- (void)startRecordWithFilePath:(NSString * _Nonnull)filePath inPoint:(int64_t)inPoint;
- (void)updateRecordTime:(int64_t)time;
- (BOOL)recordFinished SWIFT_WARN_UNUSED_RESULT;
- (void)cancel;
- (void)commit;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NvRecordDataSource (SWIFT_EXTENSION(NvShortVideoCore))
- (NSString * _Nullable)selectedItemIdentifier SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isDragEnabled SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isTapEnabled SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvRecordDataSource (SWIFT_EXTENSION(NvShortVideoCore))
- (void)trackViewRangeSelectViewTimeDragChangedWithTime:(int64_t)time;
- (void)trackViewRangeSelectViewTimeDragEndWithTime:(int64_t)time;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvRecordManager")
@interface NvRecordManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@class AVCaptureOutput;
@class AVCaptureConnection;

@interface NvRecordManager (SWIFT_EXTENSION(NvShortVideoCore)) <AVCaptureAudioDataOutputSampleBufferDelegate>
- (void)captureOutput:(AVCaptureOutput * _Nonnull)_ didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)_;
@end


@interface NvRecordManager (SWIFT_EXTENSION(NvShortVideoCore)) <NvsStreamingContextDelegate>
- (void)didSeekingTimelinePosition:(NvsTimeline * _Null_unspecified)timeline position:(int64_t)position;
- (void)didStreamingEngineStateChanged:(NvsStreamingEngineState)state;
- (void)didPlaybackTimelinePosition:(NvsTimeline * _Null_unspecified)_ position:(int64_t)position;
- (void)didPlaybackEOF:(NvsTimeline * _Null_unspecified)_;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore17NvRecordTrackView")
@interface NvRecordTrackView : NvSingleTrackView
@property (nonatomic, strong) NvRecordDataSource * _Null_unspecified fxDataSource;
- (nonnull instancetype)initWithFrame:(CGRect)frame editManager:(NvEditManager * _Nonnull)editManager OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



@interface NvRectView (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)_ shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore17NvRectViewManager")
@interface NvRectViewManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore18NvRefreshComponent")
@interface NvRefreshComponent : UIView
@property (nonatomic, readonly, weak) UIScrollView * _Nullable scrollView;
/// 记录scrollView刚开始的inset / Records the beginning inset of the scrollView
@property (nonatomic) UIEdgeInsets originalInset;
/// 拉拽的百分比(交给子类重写) / Percentage of drag (let subclass override)
@property (nonatomic) CGFloat pullingPercent;
/// 根据拖拽比例自动切换透明度 / Automatically toggles transparency according to drag ratio
@property (nonatomic) BOOL isAutomaticallyChangeAlpha;
@property (nonatomic, readonly) BOOL isRefreshing;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)configRefreshEventWithTarget:(id _Nonnull)target action:(SEL _Nonnull)action;
- (void)executeRefreshingCallback;
- (void)prepare;
- (void)beginRefreshing;
- (void)endRefreshing;
- (void)configScrollViewBounce:(UIView * _Nullable)_;
- (void)placeSubviews;
- (void)scrollViewContentOffsetDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)_;
- (void)scrollViewContentSizeDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)_;
- (void)scrollViewPanStateDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)_;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvRefreshFooter")
@interface NvRefreshFooter : NvRefreshComponent
@property (nonatomic) CGFloat ignoredScrollViewContentInsetBottom;
- (void)prepare;
- (void)configScrollViewBounce:(UIView * _Nullable)newSuperview;
- (void)endRefreshingWithNoMoreData;
- (void)resetNoMoreData;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end

@class UILabel;
@class UIActivityIndicatorView;

SWIFT_CLASS("_TtC16NvShortVideoCore19NvRefreshAutoFooter")
@interface NvRefreshAutoFooter : NvRefreshFooter
@property (nonatomic) CGFloat labelLeftInset;
@property (nonatomic, readonly, weak) UILabel * _Nullable stateLabel;
@property (nonatomic, readonly, weak) UIImageView * _Nullable arrowView;
@property (nonatomic, readonly, weak) UIActivityIndicatorView * _Nullable loadingView;
+ (NvRefreshAutoFooter * _Nonnull)footerForTarget:(id _Nonnull)target action:(SEL _Nonnull)action SWIFT_WARN_UNUSED_RESULT;
- (void)prepare;
- (void)placeSubviews;
- (void)configScrollViewBounce:(UIView * _Nullable)newSuperview;
- (void)scrollViewContentOffsetDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (void)scrollViewContentSizeDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


@class NSDate;

SWIFT_CLASS("_TtC16NvShortVideoCore15NvRefreshHeader")
@interface NvRefreshHeader : NvRefreshComponent
@property (nonatomic) CGFloat spacing;
@property (nonatomic, copy) NSString * _Nonnull lastUpdatedTimeKey;
@property (nonatomic, readonly, copy) NSDate * _Nonnull lastUpdatedTime;
@property (nonatomic) CGFloat ignoredScrollViewContentInsetTop;
- (void)prepare;
- (void)configScrollViewBounce:(UIView * _Nullable)newSuperview;
- (void)placeSubviews;
- (void)scrollViewContentOffsetDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvRefreshAutoHeader")
@interface NvRefreshAutoHeader : NvRefreshHeader
@property (nonatomic, readonly, weak) UILabel * _Nullable lastUpdatedTimeLabel;
@property (nonatomic, readonly, weak) UILabel * _Nullable stateLabel;
@property (nonatomic, readonly, weak) UIImageView * _Nullable arrowView;
@property (nonatomic, readonly, weak) UIActivityIndicatorView * _Nullable loadingView;
/// 文字距离圈圈、箭头的距离
@property (nonatomic) CGFloat labelLeftInset;
@property (nonatomic, copy) NSString * _Nonnull lastUpdatedTimeKey;
+ (NvRefreshAutoHeader * _Nonnull)headerForTarget:(id _Nonnull)target action:(SEL _Nonnull)action SWIFT_WARN_UNUSED_RESULT;
- (void)prepare;
- (void)placeSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvRefreshTrailer")
@interface NvRefreshTrailer : NvRefreshComponent
@property (nonatomic) CGFloat ignoredScrollViewContentInsetRight;
- (void)configScrollViewBounce:(UIView * _Nullable)newSuperview;
- (void)placeSubviews;
- (void)endRefreshingWithNoMoreData;
- (void)resetNoMoreData;
- (void)scrollViewContentOffsetDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (void)scrollViewContentSizeDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore20NvRefreshAutoTrailer")
@interface NvRefreshAutoTrailer : NvRefreshTrailer
@property (nonatomic, readonly, weak) UILabel * _Nullable stateLabel;
@property (nonatomic, readonly, weak) UIImageView * _Nullable arrowView;
+ (NvRefreshAutoTrailer * _Nonnull)trailerForTarget:(id _Nonnull)target action:(SEL _Nonnull)action SWIFT_WARN_UNUSED_RESULT;
- (void)prepare;
- (void)placeSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end






@interface NvRefreshComponent (SWIFT_EXTENSION(NvShortVideoCore))
- (void)layoutSubviews;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)drawRect:(CGRect)rect;
@end








typedef SWIFT_ENUM(NSInteger, NvSelectAssetType, open) {
  NvSelectAssetTypeAll = 0,
  NvSelectAssetTypeVideo = 1,
  NvSelectAssetTypeImage = 2,
};


/// 统一管理方式 详见NvBottomMenuView 中实现的 NvSingleClipDisplayProtocol
SWIFT_CLASS("_TtC16NvShortVideoCore20NvSingleClipEditView")
@interface NvSingleClipEditView : NvEventView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore20NvSingleClipMenuView")
@interface NvSingleClipMenuView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end

@class UICollectionViewLayout;

@interface NvSingleClipMenuView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)_ numberOfItemsInSection:(NSInteger)_ SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)_ sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore8NvSlider")
@interface NvSlider : UISlider
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (CGRect)trackRectForBounds:(CGRect)_ SWIFT_WARN_UNUSED_RESULT;
- (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value SWIFT_WARN_UNUSED_RESULT;
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NvSourceFileInfo;

SWIFT_CLASS("_TtC16NvShortVideoCore8NvSource")
@interface NvSource : NSObject
/// the type of media file
/// remark:
/// 文件类型
@property (nonatomic) enum MeicamMediaType mediaType;
/// the info of original meida file
/// remark:
/// 源视频/图片文件信息
@property (nonatomic, strong) NvSourceFileInfo * _Nonnull file;
/// the info of media file reverted
/// remark:
/// 经过sdk倒放后的文件信息
@property (nonatomic, strong) NvSourceFileInfo * _Nullable reverseFile;
/// the set of draft identifiers, drafts has used the same meida file
/// remark:
/// 存储项目唯一标识
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull relatedProjects;
/// the id of the media file
/// remark:
/// 文件关联标识
@property (nonatomic, copy) NSString * _Nonnull resourceId;
/// Delete when no longer in use
/// remark:
/// 不再使用时，删除
@property (nonatomic) BOOL deleteWhenUnuse;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (NSString * _Nonnull)whc_TableName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)whc_SqlitePath SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)whc_SqliteVersion SWIFT_WARN_UNUSED_RESULT;
@end

@class NvSourceUploadInfo;
@class NvSourceM3u8Info;

/// 怎么判断是否已经上传过？
SWIFT_CLASS("_TtC16NvShortVideoCore16NvSourceFileInfo")
@interface NvSourceFileInfo : NSObject
/// the relative path for local file
/// remark:
/// 本地文件相对路径
@property (nonatomic, copy) NSString * _Nonnull path;
/// the path for network file
/// remark:
/// 网络文件链接
@property (nonatomic, strong) NvSourceUploadInfo * _Nullable uploadInfo;
/// the path for network file
/// remark:
/// 已下载的m3u8文件，有remotePath 不一定有m3u8Path，有m3u8Path 一定有remotePath
@property (nonatomic, strong) NvSourceM3u8Info * _Nullable m3u8Info;
/// the duration of meida file
/// remark:
/// 视频/图片文件的时长
/// -Note: the value for imageFile is -1, means unlimited time
@property (nonatomic) int64_t duration;
@property (nonatomic) enum NvFileSourceType fileSourceType;
@property (nonatomic) uint64_t fileSize;
/// the resolution of the media file
/// remark:
/// 视频/图片文件的宽高
@property (nonatomic) CGFloat imageWidth;
@property (nonatomic) CGFloat imageHeight;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore12NvSourceInfo")
@interface NvSourceInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore16NvSourceM3u8Info")
@interface NvSourceM3u8Info : NSObject
@property (nonatomic, copy) NSString * _Nonnull imageExtension;
@property (nonatomic, copy) NSString * _Nonnull urlPrefix;
@property (nonatomic) int64_t interval;
@property (nonatomic, copy) NSString * _Nonnull leftChannelUrl;
@property (nonatomic, copy) NSString * _Nonnull rightChannelUrl;
@property (nonatomic) int64_t duration;
@property (nonatomic) NSInteger height;
@property (nonatomic) NSInteger width;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 与file关联文件的类型
typedef SWIFT_ENUM(NSInteger, NvSourceRelatedFileType, open) {
  NvSourceRelatedFileTypeReverse = 0,
  NvSourceRelatedFileTypeFile = 1,
};


SWIFT_CLASS("_TtC16NvShortVideoCore18NvSourceUploadInfo")
@interface NvSourceUploadInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull remotePath;
@property (nonatomic, copy) NSString * _Nonnull m3u8FileName;
@property (nonatomic, copy) NSString * _Nonnull netResourceId;
@property (nonatomic, copy) NSString * _Nonnull netObjectId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore13NvStayStepper")
@interface NvStayStepper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvStickerModel")
@interface NvStickerModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvStickerModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvTemplateButton")
@interface NvTemplateButton : UIButton
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (void)layoutSubviews;
- (void)setImage:(UIImage * _Nullable)image forState:(UIControlState)state;
- (void)setTitle:(NSString * _Nullable)title forState:(UIControlState)state;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore19NvTemplateClipModel")
@interface NvTemplateClipModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NvTemplateEditClipSectionTheme;

SWIFT_CLASS("_TtC16NvShortVideoCore28NvTemplateEditClipTailorView")
@interface NvTemplateEditClipTailorView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadThemeWithTheme:(NvTemplateEditClipSectionTheme * _Nonnull)theme;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvTemplateInfo")
@interface NvTemplateInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvTemplateInterface")
@interface NvTemplateInterface : NSObject
+ (UIViewController * _Nonnull)useTemplate:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
+ (void)setupLog;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol NvTemplateMaterialCenterDelegate;

SWIFT_CLASS("_TtC16NvShortVideoCore24NvTemplateMaterialCenter")
@interface NvTemplateMaterialCenter : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NvTemplateMaterialCenter * _Nonnull sharedInstance;)
+ (NvTemplateMaterialCenter * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <NvTemplateMaterialCenterDelegate> _Nullable delegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSError;
@class NSMutableDictionary;

@interface NvTemplateMaterialCenter (SWIFT_EXTENSION(NvShortVideoCore))
- (void)findMaterialCategoryTypeWithType:(NSInteger)type succesddds:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))succesddds failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (void)requestListWithType:(NSInteger)type category:(NSInteger)category kind:(NSInteger)kind pageIndex:(NSInteger)pageIndex succesddds:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))succesddds failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (void)downloadMaterialWithUuid:(NSString * _Nonnull)uuid url:(NSString * _Nonnull)url targetFolder:(NSString * _Nonnull)targetFolder optParameters:(NSMutableDictionary * _Nonnull)optParameters progress:(void (^ _Nonnull)(float))progress success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (void)autoCutListMaterialWithParam:(NSDictionary<NSString *, id> * _Nonnull)param success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
@end

@class NSURLSessionDataTask;

SWIFT_PROTOCOL("_TtP16NvShortVideoCore32NvTemplateMaterialCenterDelegate_")
@protocol NvTemplateMaterialCenterDelegate
- (void)templateRequestListCategoryWithType:(NSInteger)type optionalRequestParameters:(NSMutableDictionary * _Nonnull)optionalRequestParameters success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (void)templateRequestListDataWithType:(NSInteger)type category:(NSInteger)category kind:(NSInteger)kind optionalRequestParameters:(NSMutableDictionary * _Nonnull)optionalRequestParameters pageIndex:(NSInteger)pageIndex success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (void)templateDownloadMaterialWithUuid:(NSString * _Nonnull)uuid url:(NSString * _Nonnull)url targetFolder:(NSString * _Nonnull)targetFolder optParameters:(NSMutableDictionary * _Nonnull)optParameters progress:(void (^ _Nonnull)(float))progress success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (NSURLSessionDataTask * _Nonnull)autoCutListMaterialWithParam:(NSDictionary<NSString *, id> * _Nonnull)param success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure SWIFT_WARN_UNUSED_RESULT;
@end

@class NvTemplateHomeDataErrorTheme;

SWIFT_CLASS("_TtC16NvShortVideoCore20NvTemplateNoDataView")
@interface NvTemplateNoDataView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadThemeWithTheme:(NvTemplateHomeDataErrorTheme * _Nonnull)theme;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvTemplatePlayer")
@interface NvTemplatePlayer : UIView
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore31NvTemplatePreviewViewController")
@interface NvTemplatePreviewViewController : NvBaseTemplateViewController
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLoad;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface NvTemplatePreviewViewController (SWIFT_EXTENSION(NvShortVideoCore)) <NvThemeElement>
- (NSDictionary * _Nonnull)themeElements SWIFT_WARN_UNUSED_RESULT;
@end






@interface NvTemplatePreviewViewController (SWIFT_EXTENSION(NvShortVideoCore)) <NvAlbumViewControllerDelegate>
/// Handle the event of cutting the same item
/// remark:
/// 选择相册回调
/// \param controller album VC
///
/// \param templates selected resources
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)_ selectTemplates:(NSArray<NvAlbumTemplateItem *> * _Nonnull)templates supportedRatio:(NSInteger)supportedRatio;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvTemplateProducer")
@interface NvTemplateProducer : NSObject <NSCopying>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore30NvTemplateTailorViewController")
@interface NvTemplateTailorViewController : UIViewController
- (void)viewDidLoad;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end





@interface NvTemplateTailorViewController (SWIFT_EXTENSION(NvShortVideoCore)) <UIScrollViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)_;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)_;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore22NvTemplateTimelineIcon")
@interface NvTemplateTimelineIcon : NSObject <NvsImageGrabberDelegate>
- (void)onImageGrabbedArrived:(UIImage * _Nullable)image timestamp:(int64_t)_;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore24NvTemplateTransformModel")
@interface NvTemplateTransformModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSTextContainer;

SWIFT_CLASS("_TtC16NvShortVideoCore10NvTextView")
@interface NvTextView : UITextView
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer SWIFT_UNAVAILABLE;
@end




@interface NvTextView (SWIFT_EXTENSION(NvShortVideoCore)) <UITextViewDelegate>
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end

@protocol NvTimeVideoFxDataSourceDelegate;

SWIFT_CLASS("_TtC16NvShortVideoCore23NvTimeVideoFxDataSource")
@interface NvTimeVideoFxDataSource : NSObject
@property (nonatomic, weak) id <NvTimeVideoFxDataSourceDelegate> _Nullable delegate;
- (nonnull instancetype)initWithEditManager:(NvEditManager * _Nonnull)editManager OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nullable)addFxWithDisplayName:(NSString * _Nonnull)displayName packageId:(NSString * _Nonnull)packageId builtin:(BOOL)builtin SWIFT_WARN_UNUSED_RESULT;
- (void)revert;
- (void)forward;
- (void)removeCurrentFx;
- (void)cancel;
- (void)commit;
- (void)deselect;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NvTimeVideoFxDataSource (SWIFT_EXTENSION(NvShortVideoCore))
- (NSString * _Nullable)selectedItemIdentifier SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isDragEnabled SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isTapEnabled SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvTimeVideoFxDataSource (SWIFT_EXTENSION(NvShortVideoCore))
- (void)trackViewRangeSelectViewTimeDragChangedWithTime:(int64_t)time;
- (void)trackViewRangeSelectViewTimeDragEndWithTime:(int64_t)time;
@end


SWIFT_PROTOCOL("_TtP16NvShortVideoCore31NvTimeVideoFxDataSourceDelegate_")
@protocol NvTimeVideoFxDataSourceDelegate <NSObject>
- (void)selectedStateChanged:(NSString * _Nullable)packageId;
- (void)rollbackStateChangedWithRevertAble:(BOOL)revertAble forwardAble:(BOOL)forwardAble;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvTimelineClip")
@interface NvTimelineClip : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvTimelineCommand")
@interface NvTimelineCommand : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





















SWIFT_CLASS("_TtC16NvShortVideoCore21NvTimelineDataManager")
@interface NvTimelineDataManager : NvEventObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end







SWIFT_CLASS("_TtC16NvShortVideoCore17NvTimelineFxModel")
@interface NvTimelineFxModel : MeicamFx
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore22NvTimelineFxUpdateInfo")
@interface NvTimelineFxUpdateInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore22NvTimelineFxUpdateItem")
@interface NvTimelineFxUpdateItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvTimelineIcon")
@interface NvTimelineIcon : NSObject <NvsImageGrabberDelegate>
- (void)onImageGrabbedArrived:(UIImage * _Nullable)image timestamp:(int64_t)_;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvTimelineModel")
@interface NvTimelineModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface NvTimelineModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvTimelineView")
@interface NvTimelineView : NvEventView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC16NvShortVideoCore19NvTrackClipEditView")
@interface NvTrackClipEditView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore30NvVideoTrackPreviewContentView")
@interface NvVideoTrackPreviewContentView : NvEventView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvTrackListView")
@interface NvTrackListView : NvVideoTrackPreviewContentView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface NvTrackListView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDelegateFlowLayout>
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)_ sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvTrackListView (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvTrackListView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface NvTrackListView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)_ numberOfItemsInSection:(NSInteger)_ SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore21NvTransitionDataModel")
@interface NvTransitionDataModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvTransitionDataModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore16NvVideoClipModel")
@interface NvVideoClipModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvVideoClipModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end








@interface NvVideoEditorViewController (SWIFT_EXTENSION(NvShortVideoCore)) <NvsStreamingContextDelegate>
/// the callback of sdk engine playback state
/// remark:
/// sdk 播放预览状态的回调
/// \param state the engin playback state
///
- (void)didStreamingEngineStateChanged:(NvsStreamingEngineState)state;
/// the callback of timeline positon
/// remark:
/// sdk 播放timeline的position回调
/// \param timeline timeline
///
/// \param position the playback position
///
- (void)didPlaybackTimelinePosition:(NvsTimeline * _Null_unspecified)timeline position:(int64_t)position;
- (void)didSeekingTimelinePosition:(NvsTimeline * _Null_unspecified)_ position:(int64_t)position;
/// the callback of playback EOF
/// remark:
/// 播放结束回调
/// \param timeline timeline
///
- (void)didPlaybackEOF:(NvsTimeline * _Null_unspecified)_;
@end




SWIFT_CLASS("_TtC16NvShortVideoCore17NvVideoFxRectView")
@interface NvVideoFxRectView : NvEventView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end



@interface NvVideoFxRectView (SWIFT_EXTENSION(NvShortVideoCore))
- (void)rectViewRotationBtTouchEndWithRectView:(NvRectView * _Nonnull)_;
- (void)rectViewWithRectView:(NvRectView * _Nonnull)_ rotate:(CGFloat)_ scale:(CGFloat)scale;
- (void)rectViewWithRectView:(NvRectView * _Nonnull)_ scaleX:(CGFloat)scaleX scaleY:(CGFloat)scaleY;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore19NvVideoTrackPreview")
@interface NvVideoTrackPreview : NvEventView <UIGestureRecognizerDelegate>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore12NvVolumeView")
@interface NvVolumeView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvWaterMarkModel")
@interface NvWaterMarkModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvWaterMarkModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end
























SWIFT_CLASS("_TtC16NvShortVideoCore28PageCollectionViewFlowLayout")
@interface PageCollectionViewFlowLayout : UICollectionViewFlowLayout
- (void)prepareLayout;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15PageContentView")
@interface PageContentView : UIView
@property (nonatomic, weak) id <PageEventHandleable> _Nullable eventHandler;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



@interface PageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <PageTitleViewDelegate>
- (void)titleView:(PageTitleView * _Nonnull)titleView didSelectAt:(NSInteger)index;
@end


@interface PageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface PageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end


/// DNSPageView的事件回调，如果有需要，请让对应的childViewController遵守这个协议
/// DNSPageView event callbacks, if necessary, ask the corresponding childViewController to comply with this protocol
SWIFT_PROTOCOL("_TtP16NvShortVideoCore19PageEventHandleable_")
@protocol PageEventHandleable
@optional
/// 重复点击pageTitleView后调用
/// Call after repeatedly clicking pageTitleView
- (void)titleViewDidSelectSameTitle;
/// pageContentView的上一页消失的时候，上一页对应的controller调用
/// When the previous page of the pageContentView disappears, the controller corresponding to the previous page is called
- (void)contentViewDidDisappear;
/// pageContentView滚动停止的时候，当前页对应的controller调用
/// pageContentView When scrolling stops, the controller corresponding to the current page is called
- (void)contentViewDidEndScroll;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore13PageTitleView")
@interface PageTitleView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end





@class NvCellTheme;

@interface PageTitleView (SWIFT_EXTENSION(NvShortVideoCore)) <NvThemeElement>
- (NSDictionary * _Nonnull)themeElements SWIFT_WARN_UNUSED_RESULT;
- (void)updateCellTheme:(NvCellTheme * _Nonnull)cellTheme selectedCellTheme:(NvCellTheme * _Nonnull)selectedCellTheme viewIndicate:(NSString * _Nonnull)viewIndicate;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore8PageView")
@interface PageView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore15PageViewManager")
@interface PageViewManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end










@interface UIDevice (SWIFT_EXTENSION(NvShortVideoCore))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isIphone7;)
+ (BOOL)isIphone7 SWIFT_WARN_UNUSED_RESULT;
@end







@interface UIScrollView (SWIFT_EXTENSION(NvShortVideoCore))
@property (nonatomic, strong) NvRefreshAutoHeader * _Nullable nv_header;
@property (nonatomic, strong) NvRefreshAutoFooter * _Nullable nv_footer;
@property (nonatomic, strong) NvRefreshAutoTrailer * _Nullable nv_trailer;
- (NSInteger)nv_totalDataCount SWIFT_WARN_UNUSED_RESULT;
@end







#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef NVSHORTVIDEOCORE_SWIFT_H
#define NVSHORTVIDEOCORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreMedia;
@import Foundation;
@import NvStreamingSdkCore;
@import ObjectiveC;
@import UIKit;
#endif

#import <NvShortVideoCore/NvShortVideoCore.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NvShortVideoCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


SWIFT_CLASS("_TtC16NvShortVideoCore22MeicamControlPointPair")
@interface MeicamControlPointPair : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore27MeicamControlPointParamPair")
@interface MeicamControlPointParamPair : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore8MeicamFx")
@interface MeicamFx : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC16NvShortVideoCore18MeicamFxCurveParam")
@interface MeicamFxCurveParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore13MeicamFxParam")
@interface MeicamFxParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, MeicamMediaType, open) {
  MeicamMediaTypeUnknown = 0,
  MeicamMediaTypeImage = 1,
  MeicamMediaTypeVideo = 2,
  MeicamMediaTypeAudio = 3,
};



/// 调整数据模型 / Adjust Color Model
SWIFT_CLASS("_TtC16NvShortVideoCore18NvAdjustColorModel")
@interface NvAdjustColorModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface NvAdjustColorModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore13NvAdjustModel")
@interface NvAdjustModel : NvAdjustColorModel
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvAdjustModel (SWIFT_EXTENSION(NvShortVideoCore))
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


@class PHAsset;

SWIFT_CLASS("_TtC16NvShortVideoCore12NvAlbumAsset")
@interface NvAlbumAsset : NSObject
@property (nonatomic, strong) PHAsset * _Nullable asset;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvAlbumItem")
@interface NvAlbumItem : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;
@class NSString;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC16NvShortVideoCore27NvAlbumNavigationController")
@interface NvAlbumNavigationController : UINavigationController
- (void)viewDidLoad;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvAlbumTemplateItem")
@interface NvAlbumTemplateItem : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvAlbumTool")
@interface NvAlbumTool : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NvAlbumViewController;
@class UIView;

SWIFT_PROTOCOL("_TtP16NvShortVideoCore29NvAlbumViewControllerDelegate_")
@protocol NvAlbumViewControllerDelegate
@optional
/// Tells delegate to receive the array of NvAlbumAsset after click the bottom button
/// remark:
/// 点击底部按钮触发的回调将所有被选择的assets传出去
/// 
/// note:
/// The delegate will not response if the bottom button is custom
/// \param controller NvAlbumViewController
///
/// \param assets the data selected form album
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller selectAlbum:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
/// Tells delgate to update the current data selected form album after click the cell or the button of selected
/// option
/// remark:
/// 每次点击cell或者点击全选取消反选都会掉用，将更新后的assets传出去
/// 
/// \param controller NvAlbumViewController
///
/// \param assets the data selected from album
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller didSelectAlbum:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
/// Tells delegate to update the data selected form album, and the count of assets has exceed the maximum limit.
/// remark:
/// 点击相册超过最大限制数量，将所有被选择的assets传出去
/// 
/// note:
/// The delegate will response if the count of assets has exceed the maximum limit
/// \param controller NvAlbumViewController
///
/// \param assets the data selected from album
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller selectAlbumAssetsOverMaxCountLimit:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
/// Tells delegate to update the data selected form album, and the count of assets is lower than the minimum limit.
/// remark:
/// 点击相册低过最小限制数量，自定义按钮的话不会触发此回调，将所有被选择的assets传出去
/// 
/// note:
/// The delegate will not response if the bottom button is custom
/// \param controller NvAlbumViewController
///
/// \param assets the data selected from album
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller selectAlbumAssetsUnderMinCountLimit:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
/// Tells delegate to dismiss or pop the NvAlbumViewController
/// remark:
/// 返回按钮触发的回调
/// 
/// \param controller NvAlbumViewController
///
- (void)nvAlbumViewControllerCancelClickWithController:(NvAlbumViewController * _Nonnull)controller;
/// Asks the delegate to get the button for bottom view
/// remark:
/// 自定义底部按钮的回调
/// 
- (UIView * _Nonnull)nvAlbumViewControllerCustomBottomButton SWIFT_WARN_UNUSED_RESULT;
/// Tells delegate to reveive the array of NvAlbumTemplateItem,
/// remark:
/// 通用模板导入素材的回调,hiddenTemplateView为false，才会显示模版导入视图
/// 
/// note:
/// The delegate will response if the value of hiddenTemplateView is false
/// \param controller NvAlbumViewController
///
/// \param templates the data selected from album
///
/// \param supportedRatio 0
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller selectTemplates:(NSArray<NvAlbumTemplateItem *> * _Nonnull)templates supportedRatio:(NSInteger)supportedRatio;
/// AutoCut delegate
/// <ul>
///   <li>
///     Parameters: 相册选完素材，开始一键成片
///     <ul>
///       <li>
///         controller: NvAlbumViewController
///       </li>
///       <li>
///         assets: the data selected from album
///       </li>
///     </ul>
///   </li>
/// </ul>
- (void)nvAlbumViewControllerAutoCutWithController:(NvAlbumViewController * _Nonnull)controller selectAlbum:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
@end


@interface NvAlbumTool (SWIFT_EXTENSION(NvShortVideoCore)) <NvAlbumViewControllerDelegate>
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)controller selectAlbum:(NSArray<NvAlbumAsset *> * _Nonnull)assets;
- (void)nvAlbumViewControllerCancelClickWithController:(NvAlbumViewController * _Nonnull)_;
@end

enum NvSelectAssetType : NSInteger;

SWIFT_CLASS("_TtC16NvShortVideoCore21NvAlbumViewController")
@interface NvAlbumViewController : UIViewController
@property (nonatomic, weak) id <NvAlbumViewControllerDelegate> _Nullable delegate;
@property (nonatomic) enum NvSelectAssetType selectAssetType;
@property (nonatomic, copy) NSString * _Nonnull viewTag;
@property (nonatomic) BOOL mutableSelect;
@property (nonatomic) BOOL isSupport4K;
@property (nonatomic) BOOL isSupportHDR;
@property (nonatomic) BOOL isDisableHighFrameRate;
@property (nonatomic) NSInteger maxSelectCount;
@property (nonatomic) BOOL hiddenSelectAll;
@property (nonatomic, copy) NSArray<NvAlbumTemplateItem *> * _Nonnull templateClips;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull templateSupportRations;
/// 支持的比例
@property (nonatomic, copy) NSString * _Nonnull templateDefaultRation;
@property (nonatomic) CGFloat bottomLineWidth;
/// 这里对应不同的底部样式
/// 1=标准样式（带有一键成片按钮）
/// 2=标准模版和ae模版
/// 3=自适应时长模版
/// 4=一键成片，合拍也选用这个模式
/// Here correspond to different bottom styles
/// 1= Standard style (with one click to piece button)
/// 2= Standard templates and ae templates
/// 3= adaptive duration template, one click to film
/// 4= One click to make a piece，This mode is also used in synchro
@property (nonatomic) NSInteger categoryType;
@property (nonatomic) BOOL hiddenAutoCut;
@property (nonatomic, copy) NSString * _Nullable projectId;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithLimitDuration:(BOOL)limitDuration OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLoad;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface NvAlbumViewController (SWIFT_EXTENSION(NvShortVideoCore)) <NvThemeElement>
- (NSDictionary * _Nonnull)themeElements SWIFT_WARN_UNUSED_RESULT;
@end



@class UIScrollView;

@interface NvAlbumViewController (SWIFT_EXTENSION(NvShortVideoCore)) <UIScrollViewDelegate>
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)_ withVelocity:(CGPoint)_ targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvAnimationModel")
@interface NvAnimationModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore14NvAssetInstall")
@interface NvAssetInstall : NSObject <NvsAssetPackageManagerDelegate>
- (void)didFinishAssetPackageInstallation:(NSString * _Null_unspecified)assetPackageId filePath:(NSString * _Null_unspecified)_ type:(NvsAssetPackageType)_ error:(NvsAssetPackageManagerError)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvAudioClipCommand")
@interface NvAudioClipCommand : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC16NvShortVideoCore16NvAudioClipModel")
@interface NvAudioClipModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvAudioClipModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end




SWIFT_CLASS("_TtC16NvShortVideoCore26NvAudioClipTransitionParam")
@interface NvAudioClipTransitionParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore22NvAudioClipUpdateParam")
@interface NvAudioClipUpdateParam : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvBackgroundFxModel")
@interface NvBackgroundFxModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore28NvBaseTemplateViewController")
@interface NvBaseTemplateViewController : UIViewController
- (void)viewDidLoad;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIGestureRecognizer;

@interface NvBaseTemplateViewController (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvEventView")
@interface NvEventView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore16NvBottomMenuView")
@interface NvBottomMenuView : NvEventView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end



@class UICollectionView;
@class NSIndexPath;
@class UICollectionViewCell;

@interface NvBottomMenuView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)_ numberOfItemsInSection:(NSInteger)_ SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)_ didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore13NvEventObject")
@interface NvEventObject : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore22NvBottomPopViewManager")
@interface NvBottomPopViewManager : NvEventObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvBuiltinFxModel")
@interface NvBuiltinFxModel : MeicamFx
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvCaptionModel")
@interface NvCaptionModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvCaptionModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore14NvClipAddParam")
@interface NvClipAddParam : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvClipCopyParam")
@interface NvClipCopyParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvClipFxUpdateInfo")
@interface NvClipFxUpdateInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvClipMoveParam")
@interface NvClipMoveParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvClipReplaceParam")
@interface NvClipReplaceParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore16NvClipSplitParam")
@interface NvClipSplitParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvClipUpdateParam")
@interface NvClipUpdateParam : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvClipVolumeParam")
@interface NvClipVolumeParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC16NvShortVideoCore10NvRectView")
@interface NvRectView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)layoutSubviews;
- (void)drawRect:(CGRect)_;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore23NvRotationScaleRectView")
@interface NvRotationScaleRectView : NvRectView
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore23NvCloseRotationRectView")
@interface NvCloseRotationRectView : NvRotationScaleRectView
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvComCaptionModel")
@interface NvComCaptionModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvComCaptionModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvCommandManager")
@interface NvCommandManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore27NvCompoundCaptionIndexModel")
@interface NvCompoundCaptionIndexModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvCompoundCaptionIndexModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvCoverInfo")
@interface NvCoverInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvCropperBottomView")
@interface NvCropperBottomView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore16NvTransformModel")
@interface NvTransformModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvCropperModel")
@interface NvCropperModel : NvTransformModel
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore17NvCropperRectView")
@interface NvCropperRectView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvCropperRectView (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)_ shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvCropperScrollView")
@interface NvCropperScrollView : UIView <UIScrollViewDelegate>
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end




@class NvsTimeline;

@interface NvCropperScrollView (SWIFT_EXTENSION(NvShortVideoCore)) <NvsStreamingContextDelegate>
- (void)didPlaybackTimelinePosition:(NvsTimeline * _Null_unspecified)timeline position:(int64_t)position;
- (void)didPlaybackEOF:(NvsTimeline * _Null_unspecified)_;
- (void)didStreamingEngineStateChanged:(NvsStreamingEngineState)state;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore23NvCropperViewController")
@interface NvCropperViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)loadView;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end





@interface NvCropperViewController (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)_ numberOfItemsInSection:(NSInteger)_ SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvCurveSpeedModel")
@interface NvCurveSpeedModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvDoubleSlider")
@interface NvDoubleSlider : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end



@interface NvDoubleSlider (SWIFT_EXTENSION(NvShortVideoCore))
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvEditAlertView")
@interface NvEditAlertView : UIView
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




@interface NvEditAlertView (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)_ shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end

@class UIImage;

SWIFT_CLASS("_TtC16NvShortVideoCore12NvEditButton")
@interface NvEditButton : UIButton
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (void)layoutSubviews;
- (void)setImage:(UIImage * _Nullable)image forState:(UIControlState)state;
- (void)setTitle:(NSString * _Nullable)title forState:(UIControlState)state;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore14NvEditFileItem")
@interface NvEditFileItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull filePath;
@property (nonatomic, strong) PHAsset * _Nullable albumAsset;
@property (nonatomic) double speed;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NvsStreamingContext;
@class NvsFx;
@protocol NvEditManagerDelegate;

SWIFT_CLASS("_TtC16NvShortVideoCore13NvEditManager")
@interface NvEditManager : NSObject
@property (nonatomic, readonly, strong) NvsStreamingContext * _Nonnull streamingContext;
@property (nonatomic, readonly, strong) NvsTimeline * _Nonnull timeline;
@property (nonatomic) BOOL autoPlayWhenBecomeActive;
@property (nonatomic) BOOL inPreviewRange;
@property (nonatomic, readonly) int64_t currentTime;
@property (nonatomic) CGFloat frameRate;
@property (nonatomic, readonly) NvsStreamingEngineState engineState;
@property (nonatomic, strong) NvsFx * _Nullable selectedFx;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)appendSeekBlockWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)appendDelegate:(id <NvEditManagerDelegate> _Nonnull)delegate;
- (void)removeDelegate:(id <NvEditManagerDelegate> _Nonnull)delegate;
- (void)addObservers;
- (void)removeObserver;
- (void)playWithClean:(BOOL)clean;
- (void)play;
- (void)replay;
- (void)previewWithStart:(int64_t)start end:(int64_t)end;
- (void)refreshWithClean:(BOOL)clean;
- (void)refresh;
- (void)seekTimelineWithPosition:(int64_t)position;
- (void)clearCachedResources;
- (NSString * _Nullable)compileCurrentTimeline SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvEditManager (SWIFT_EXTENSION(NvShortVideoCore)) <NvsStreamingContextDelegate>
- (void)didCompileCompleted:(NvsTimeline * _Null_unspecified)timeline isHardwareEncoding:(BOOL)isHardwareEncoding errorType:(int32_t)errorType errorString:(NSString * _Null_unspecified)errorString flags:(int32_t)flags;
- (void)didCompileProgress:(NvsTimeline * _Null_unspecified)_ progress:(int32_t)progress;
- (void)didStreamingEngineStateChanged:(NvsStreamingEngineState)state;
- (void)didSeekingTimelinePosition:(NvsTimeline * _Nonnull)timeline position:(int64_t)position;
- (void)didPlaybackTimelinePosition:(NvsTimeline * _Nonnull)timeline position:(int64_t)position;
- (void)didPlaybackEOF:(NvsTimeline * _Nonnull)timeline;
@end

@class NvEditMusicFileItem;

@interface NvEditManager (SWIFT_EXTENSION(NvShortVideoCore))
+ (void)prepareProEditEnv;
+ (void)exitProEdit;
+ (void)openProjectWithProjectId:(NSString * _Nonnull)projectId;
+ (BOOL)newProjectWithFiles:(NSArray<NvEditFileItem *> * _Nonnull)files music:(NvEditMusicFileItem * _Nullable)music projectId:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NvEditMode editMode;)
+ (NvEditMode)editMode SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvEditManager (SWIFT_EXTENSION(NvShortVideoCore))
@property (nonatomic, readonly) BOOL effectNeedProEdit;
@property (nonatomic) float recordTrackVolume;
- (NSString * _Nonnull)filePathForAudio SWIFT_WARN_UNUSED_RESULT;
- (void)startRecordPlayWithEnd:(int64_t)end;
- (void)endRecordPlay;
@end

@class NvRecognitionTextItem;
@class NvRecognitionTextEditItem;
@class NvImageCaptionModel;

@interface NvEditManager (SWIFT_EXTENSION(NvShortVideoCore))
@property (nonatomic, readonly, copy) NSString * _Nonnull audioComilePath;
- (NvsTimeline * _Nullable)timelineForAutoCaptionWithContext:(NvsStreamingContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL hasRecognition;
- (void)removeAllRecognitionCaptions;
- (void)removeRecognitionWithItemIndicate:(NSString * _Nonnull)itemIndicate;
- (void)addRecognitionWithCaptions:(NSArray<NvRecognitionTextItem *> * _Nonnull)captions languageIdentifier:(NSString * _Nullable)languageIdentifier;
- (NSArray<NvRecognitionTextEditItem *> * _Nonnull)recognitionEditCaptions SWIFT_WARN_UNUSED_RESULT;
- (void)recoverRecognitionWithCaptions:(NSArray<NvRecognitionTextEditItem *> * _Nonnull)captions;
- (NvImageCaptionModel * _Nullable)recognitionStyle SWIFT_WARN_UNUSED_RESULT;
- (void)recognitionApplyWithModel:(NvImageCaptionModel * _Nullable)model;
- (void)recognitionApplyWithColor:(NSString * _Nonnull)color;
- (void)recognitionApplyWithStyle:(NvImageCaptionStyle)style;
- (void)recognitionApplyWithFontPath:(NSString * _Nullable)fontPath fontUuid:(NSString * _Nullable)fontUuid fontFamily:(NSString * _Nullable)fontFamily;
- (void)scaleRecognitionCaption:(float)scale;
- (void)translateRecognitionCaption:(CGPoint)translationOffset;
@end

@class NvsTimelineAnimatedSticker;
@class NvsTimelineCaption;
@class NvsThumbnailSequenceDesc;

@interface NvEditManager (SWIFT_EXTENSION(NvShortVideoCore))
@property (nonatomic, readonly) BOOL available;
- (void)resumeTask;
- (void)setFetchWithCompletion:(void (^ _Nonnull)(BOOL))completion;
@property (nonatomic, readonly, copy) NSString * _Nonnull projectId;
@property (nonatomic, readonly, copy) NSString * _Nullable editVideoFxPackageId;
- (BOOL)applyFilterWithPackageId:(NSString * _Nullable)packageId builtin:(BOOL)builtin filterName:(NSString * _Nullable)filterName intensity:(float)intensity SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) float filterIntensity;
- (void)deleteDragFx:(NvsFx * _Nonnull)fx;
- (void)syncStickerData:(NvsTimelineAnimatedSticker * _Nonnull)sticker;
- (void)syncCaptionData:(NvsTimelineCaption * _Nonnull)caption;
- (NvsTimelineAnimatedSticker * _Nullable)addSticker:(NSString * _Nonnull)uuid cover:(NSString * _Nonnull)cover SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Nullable bultinVideoTypeFxName;
@property (nonatomic) float originalTrackVolume;
@property (nonatomic) BOOL muteOriginal;
@property (nonatomic) BOOL muteMusic;
@property (nonatomic) float musicTrackVolume;
- (NSArray<NvsThumbnailSequenceDesc *> * _Nonnull)videoTrackDesc SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL editMusicLoop;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable editMusicInfo;
- (BOOL)enableMusicWithMusicPath:(NSString * _Nullable)musicPath musicName:(NSString * _Nullable)musicName musicId:(NSString * _Nullable)musicId trimIn:(int64_t)trimIn SWIFT_WARN_UNUSED_RESULT;
- (NvsTimelineAnimatedSticker * _Nullable)updateCaptionWithImageModel:(NvImageCaptionModel * _Nonnull)imageModel sticker:(NvsTimelineAnimatedSticker * _Nullable)sticker backupTextViewWidth:(CGFloat)backupTextViewWidth currentTextViewWidth:(CGFloat)currentTextViewWidth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)saveProjectWithImage:(UIImage * _Nonnull)image SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP16NvShortVideoCore21NvEditManagerDelegate_")
@protocol NvEditManagerDelegate
@optional
- (void)didSeekingTimelinePosition:(NvsTimeline * _Nonnull)timeline position:(int64_t)position;
- (void)didPlaybackTimelinePosition:(NvsTimeline * _Nonnull)timeline position:(int64_t)position;
- (void)didPlaybackEOF:(NvsTimeline * _Nonnull)timeline;
- (void)didStreamingEngineStateChanged:(NvsStreamingEngineState)state;
- (void)didCompileCompleted:(NvsTimeline * _Nonnull)timeline isHardwareEncoding:(BOOL)isHardwareEncoding errorType:(int32_t)errorType errorString:(NSString * _Nullable)errorString flags:(int32_t)flags;
- (void)didCompileFloatProgressWithProgress:(float)progress;
- (void)didChangedEditMusicWithMusic:(NSString * _Nullable)music;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvEditMusicFileItem")
@interface NvEditMusicFileItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull musicPath;
@property (nonatomic) int64_t trimIn;
@property (nonatomic) int64_t trimOut;
@property (nonatomic, copy) NSString * _Nonnull musicName;
@property (nonatomic, copy) NSString * _Nonnull musicId;
@property (nonatomic) BOOL loop;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore13NvEffectModel")
@interface NvEffectModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface NvEffectModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


@class UIColor;
@class UIImageView;
@class NvsMultiThumbnailSequenceView;

SWIFT_CLASS("_TtC16NvShortVideoCore17NvSingleTrackView")
@interface NvSingleTrackView : UIView
@property (nonatomic, readonly, strong) UIView * _Nonnull timeTagView;
@property (nonatomic, strong) UIColor * _Nonnull clipBorderColor;
@property (nonatomic) CGFloat clipBorderWidth;
@property (nonatomic) CGFloat handleMinimumDistance;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull leftHandleView;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull rightHandleView;
@property (nonatomic, readonly, strong) NvsMultiThumbnailSequenceView * _Nonnull squenceView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)updateCenterTime:(int64_t)centerTime animation:(BOOL)animation;
- (void)configViewDataWithTimelineDuration:(int64_t)timelineDuration thumbnailAspectRatio:(CGFloat)thumbnailAspectRatio descs:(NSArray<NvsThumbnailSequenceDesc *> * _Nonnull)descs;
- (void)startEditItem;
- (void)deselect;
- (void)reload;
@end

@class NvTimeVideoFxDataSource;

SWIFT_CLASS("_TtC16NvShortVideoCore17NvEffectTrackView")
@interface NvEffectTrackView : NvSingleTrackView
@property (nonatomic, strong) NvTimeVideoFxDataSource * _Null_unspecified fxDataSource;
@property (nonatomic) int64_t edgeTime;
- (nonnull instancetype)initWithFrame:(CGRect)frame editManager:(NvEditManager * _Nonnull)editManager OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NvsLiveWindow;

SWIFT_PROTOCOL("_TtP16NvShortVideoCore29NvEffectTransitioningProtocal_")
@protocol NvEffectTransitioningProtocal <NSObject>
- (CGRect)liveWindowFrame SWIFT_WARN_UNUSED_RESULT;
- (void)receiveWithLiveWindow:(NvsLiveWindow * _Nonnull)liveWindow;
@property (nonatomic, readonly, strong) NvsLiveWindow * _Nullable liveWindow;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore25NvEventCollectionViewCell")
@interface NvEventCollectionViewCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC16NvShortVideoCore21NvEventViewController")
@interface NvEventViewController : UIViewController
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLoad;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvEventViewController (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvFileConvertor")
@interface NvFileConvertor : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvFileConvertor (SWIFT_EXTENSION(NvShortVideoCore)) <NvsMediaFileConvertorDelegate>
- (void)didConvertorProgress:(int64_t)taskId progress:(float)progress;
- (void)didConvertorFinish:(int64_t)taskId sourceFile:(NSString * _Null_unspecified)_ outputFile:(NSString * _Null_unspecified)dst errorCode:(NvsMediaConvertorErrorType)error;
- (void)didAudioMuteRage:(int64_t)_ muteStart:(int64_t)_ muteEnd:(int64_t)_;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvFileDownloadTask")
@interface NvFileDownloadTask : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSession;
@class NSURLSessionDownloadTask;
@class NSURL;

@interface NvFileDownloadTask (SWIFT_EXTENSION(NvShortVideoCore)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)_ downloadTask:(NSURLSessionDownloadTask * _Nonnull)_ didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)_ downloadTask:(NSURLSessionDownloadTask * _Nonnull)_ didWriteData:(int64_t)_ totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)_ downloadTask:(NSURLSessionDownloadTask * _Nonnull)_ didResumeAtOffset:(int64_t)_ expectedTotalBytes:(int64_t)_;
@end

typedef SWIFT_ENUM(NSInteger, NvFileSourceType, open) {
  NvFileSourceTypeFile = 0,
  NvFileSourceTypeAlbum = 1,
  NvFileSourceTypeBundleFile = 2,
  NvFileSourceTypeMediaLibrary = 3,
};


SWIFT_CLASS("_TtC16NvShortVideoCore13NvFilterModel")
@interface NvFilterModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvFilterModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore22NvFxCommandUpdateParam")
@interface NvFxCommandUpdateParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvFxUpdateItem")
@interface NvFxUpdateItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore10NvGCDGroup")
@interface NvGCDGroup : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore12NvIconGetter")
@interface NvIconGetter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NvIconGetter (SWIFT_EXTENSION(NvShortVideoCore)) <NvsIconGeneratorDelegate>
- (void)didIconReady:(UIImage * _Nullable)icon timestamp:(int64_t)_ taskId:(int64_t)taskId;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvImageCaptionModel")
@interface NvImageCaptionModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull imagePath;
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic) NvImageCaptionStyle imageCaptionStyle;
@property (nonatomic, copy) NSString * _Nullable fontUuid;
@property (nonatomic, copy) NSString * _Nullable fontFamily;
@property (nonatomic, copy) NSString * _Nullable fontPath;
@property (nonatomic, copy) NSString * _Nonnull colorString;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NvImageCaptionModel * _Nonnull)deepCopy SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvKeyframeCommand")
@interface NvKeyframeCommand : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end














SWIFT_CLASS("_TtC16NvShortVideoCore20NvKeyframeUpdateInfo")
@interface NvKeyframeUpdateInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore20NvKeyframeUpdateItem")
@interface NvKeyframeUpdateItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore10NvLineTool")
@interface NvLineTool : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvMaskModel")
@interface NvMaskModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvMaskOperator")
@interface NvMaskOperator : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvMaskRectView")
@interface NvMaskRectView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface NvMaskRectView (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore21NvMaskRectViewManager")
@interface NvMaskRectViewManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvMaskRegionInfo")
@interface NvMaskRegionInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvMenuOperator")
@interface NvMenuOperator : NvEventObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol PageEventHandleable;

SWIFT_CLASS("_TtC16NvShortVideoCore17NvPageContentView")
@interface NvPageContentView : UIView
@property (nonatomic, weak) id <PageEventHandleable> _Nullable eventHandler;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@class PageTitleView;

SWIFT_PROTOCOL("_TtP16NvShortVideoCore21PageTitleViewDelegate_")
@protocol PageTitleViewDelegate
@optional
/// DNSPageView的事件回调处理者
/// Event callback handler for DNSPageView
@property (nonatomic, readonly, strong) id <PageEventHandleable> _Nullable eventHandler;
@required
- (void)titleView:(PageTitleView * _Nonnull)titleView didSelectAt:(NSInteger)index;
@end


@interface NvPageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <PageTitleViewDelegate>
- (void)titleView:(PageTitleView * _Nonnull)titleView didSelectAt:(NSInteger)index;
@end


@interface NvPageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvPageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore10NvPageView")
@interface NvPageView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore17NvPageViewManager")
@interface NvPageViewManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC16NvShortVideoCore8NvPlayer")
@interface NvPlayer : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC16NvShortVideoCore13NvPluginModel")
@interface NvPluginModel : NvBuiltinFxModel
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvPluginModel (SWIFT_EXTENSION(NvShortVideoCore))
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore11NvPointTool")
@interface NvPointTool : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol UIViewControllerAnimatedTransitioning;

SWIFT_CLASS("_TtC16NvShortVideoCore22NvProEditTransitioning")
@interface NvProEditTransitioning : NSObject <UINavigationControllerDelegate>
- (id <UIViewControllerAnimatedTransitioning> _Nullable)navigationController:(UINavigationController * _Nonnull)navigationController animationControllerForOperation:(UINavigationControllerOperation)operation fromViewController:(UIViewController * _Nonnull)fromVC toViewController:(UIViewController * _Nonnull)toVC SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NvProEditType, open) {
  NvProEditTypeNone = 0,
  NvProEditTypeEffect = 1,
  NvProEditTypeRecord = 2,
};


SWIFT_CLASS("_TtC16NvShortVideoCore27NvVideoEditorViewController")
@interface NvVideoEditorViewController : NvEventViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore23NvProEditViewController")
@interface NvProEditViewController : NvVideoEditorViewController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)leftNavButtonClickWithButton:(UIButton * _Nonnull)button;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class NvVolumeView;

SWIFT_PROTOCOL("_TtP16NvShortVideoCore20NvVolumeViewDelegate_")
@protocol NvVolumeViewDelegate
@optional
- (void)volumeViewTapViewWithVolumeView:(NvVolumeView * _Nonnull)volumeView enable:(BOOL)enable;
@end


@interface NvProEditViewController (SWIFT_EXTENSION(NvShortVideoCore)) <NvVolumeViewDelegate>
- (void)volumeViewTapViewWithVolumeView:(NvVolumeView * _Nonnull)_ enable:(BOOL)_;
@end






SWIFT_CLASS("_TtC16NvShortVideoCore32NvProfessionalEditViewController")
@interface NvProfessionalEditViewController : NvProEditViewController
@property (nonatomic, readonly, strong) NvProEditTransitioning * _Nonnull transition;
- (nonnull instancetype)initWithType:(enum NvProEditType)type OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)leftNavButtonClickWithButton:(UIButton * _Nonnull)button;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvProgressView")
@interface NvProgressView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore13NvProjectInfo")
@interface NvProjectInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NvTimelineModel;

SWIFT_CLASS("_TtC16NvShortVideoCore16NvProjectManager")
@interface NvProjectManager : NSObject
/// File Name
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull projectInfoJson;)
+ (NSString * _Nonnull)projectInfoJson SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull projectDataJson;)
+ (NSString * _Nonnull)projectDataJson SWIFT_WARN_UNUSED_RESULT;
/// Get the path for saved peoject folder
/// remark:
/// 草稿保存文件夹路径
///
/// returns:
/// the folder path of draft
+ (NSString * _Nonnull)projectPath SWIFT_WARN_UNUSED_RESULT;
/// Get the project path by projectId
/// remark:
/// 根据projectId 获取某一草稿的绝对路径
/// \param projectId the identifier of draft
///
///
/// returns:
/// the draft absolute path
+ (NSString * _Nonnull)projectLocalPathWithProjectId:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
/// Write the timeline detail info to json file as draft
/// remark:
/// 缓存timeline草稿
/// \param model the data structure of timeline
///
/// \param callBack callback the result of saved timeline
///
+ (void)storeTimelineDataWithModel:(NvTimelineModel * _Nonnull)model sync:(BOOL)sync waitUntilFinished:(BOOL)waitUntilFinished callBack:(void (^ _Nonnull)(BOOL))callBack;
+ (BOOL)storeCurrentProjectWithProjectId:(NSString * _Nonnull)projectId projectDescription:(NSString * _Nonnull)projectDescription SWIFT_WARN_UNUSED_RESULT;
/// Saves the project information file for reading the draft list
/// 保存用于草稿列表读取的项目信息文件
+ (NvProjectInfo * _Nonnull)updateProjectInfoFileWithProjectId:(NSString * _Nonnull)projectId duration:(int64_t)duration projectDescription:(NSString * _Nullable)projectDescription lastModifiedTime:(NSString * _Nullable)lastModifiedTime SWIFT_WARN_UNUSED_RESULT;
+ (void)resetProjectInfoFileWithInfoModel:(NvProjectInfo * _Nonnull)infoModel;
+ (NvTimelineModel * _Nullable)fetchTimelineModelWithProjectId:(NSString * _Nonnull)projectId dir:(NSString * _Nullable)dir SWIFT_WARN_UNUSED_RESULT;
+ (NvTimelineModel * _Nullable)readTimelineModelWithJsonPath:(NSString * _Nonnull)jsonPath projectId:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
+ (NvProjectInfo * _Nullable)fetchProjectInfoWithProjectId:(NSString * _Nonnull)projectId dir:(NSString * _Nullable)dir SWIFT_WARN_UNUSED_RESULT;
/// Get the list of Drafts
/// remark:
/// 获取项目列表
///
/// returns:
/// array for the data structure of timeline
+ (NSArray<NvProjectInfo *> * _Nonnull)projectList SWIFT_WARN_UNUSED_RESULT;
+ (void)cleanProjectFilesWithProjects:(NSArray<NSString *> * _Nonnull)projects;
/// Delete the project and the folder saved project info.json
/// remark:
/// delete project及文件夹
/// \param model the info of timeline
///
///
/// returns:
/// true means success to delete the project
+ (BOOL)deleteProjectWithModel:(NvProjectInfo * _Nonnull)model;
+ (BOOL)deleteWithProjectId:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
/// Copy new project form the timeline info
/// remark:
/// copy project
/// \param model the info of timeline
///
///
/// returns:
/// true means success to copy the project
+ (NSString * _Nullable)copyProjectWithProjectId:(NSString * _Nonnull)projectId targetDir:(NSString * _Nullable)targetDir;
+ (NSString * _Nullable)updateCoverWithImage:(UIImage * _Nonnull)image projectId:(NSString * _Nonnull)projectId;
+ (NSString * _Nonnull)projectCoverImagePathWithProjectId:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore27NvPropertyBackgroundFxModel")
@interface NvPropertyBackgroundFxModel : NvBackgroundFxModel
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore25NvRecognitionTextEditItem")
@interface NvRecognitionTextEditItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull itemIndicate;
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic, copy) NSString * _Nullable editText;
@property (nonatomic) int64_t inPoint;
@property (nonatomic) int64_t outPoint;
@property (nonatomic) CGFloat speechSpeed;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvRecordDataSource")
@interface NvRecordDataSource : NSObject
@property (nonatomic, copy) NSString * _Nullable recordingPath;
- (nonnull instancetype)initWithEditManager:(NvEditManager * _Nonnull)editManager OBJC_DESIGNATED_INITIALIZER;
- (BOOL)recordAvailable:(NSRange)checkRange SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasClipWithPosition:(int64_t)position SWIFT_WARN_UNUSED_RESULT;
- (void)deleteClip:(int64_t)position;
- (int64_t)recordEndTime:(int64_t)position SWIFT_WARN_UNUSED_RESULT;
- (void)startRecordWithFilePath:(NSString * _Nonnull)filePath inPoint:(int64_t)inPoint;
- (void)updateRecordTime:(int64_t)time;
- (BOOL)recordFinished SWIFT_WARN_UNUSED_RESULT;
- (void)cancel;
- (void)commit;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NvRecordDataSource (SWIFT_EXTENSION(NvShortVideoCore))
- (NSString * _Nullable)selectedItemIdentifier SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isDragEnabled SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isTapEnabled SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvRecordDataSource (SWIFT_EXTENSION(NvShortVideoCore))
- (void)trackViewRangeSelectViewTimeDragChangedWithTime:(int64_t)time;
- (void)trackViewRangeSelectViewTimeDragEndWithTime:(int64_t)time;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvRecordManager")
@interface NvRecordManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@class AVCaptureOutput;
@class AVCaptureConnection;

@interface NvRecordManager (SWIFT_EXTENSION(NvShortVideoCore)) <AVCaptureAudioDataOutputSampleBufferDelegate>
- (void)captureOutput:(AVCaptureOutput * _Nonnull)_ didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)_;
@end


@interface NvRecordManager (SWIFT_EXTENSION(NvShortVideoCore)) <NvsStreamingContextDelegate>
- (void)didSeekingTimelinePosition:(NvsTimeline * _Null_unspecified)timeline position:(int64_t)position;
- (void)didStreamingEngineStateChanged:(NvsStreamingEngineState)state;
- (void)didPlaybackTimelinePosition:(NvsTimeline * _Null_unspecified)_ position:(int64_t)position;
- (void)didPlaybackEOF:(NvsTimeline * _Null_unspecified)_;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore17NvRecordTrackView")
@interface NvRecordTrackView : NvSingleTrackView
@property (nonatomic, strong) NvRecordDataSource * _Null_unspecified fxDataSource;
- (nonnull instancetype)initWithFrame:(CGRect)frame editManager:(NvEditManager * _Nonnull)editManager OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



@interface NvRectView (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)_ shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore17NvRectViewManager")
@interface NvRectViewManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore18NvRefreshComponent")
@interface NvRefreshComponent : UIView
@property (nonatomic, readonly, weak) UIScrollView * _Nullable scrollView;
/// 记录scrollView刚开始的inset / Records the beginning inset of the scrollView
@property (nonatomic) UIEdgeInsets originalInset;
/// 拉拽的百分比(交给子类重写) / Percentage of drag (let subclass override)
@property (nonatomic) CGFloat pullingPercent;
/// 根据拖拽比例自动切换透明度 / Automatically toggles transparency according to drag ratio
@property (nonatomic) BOOL isAutomaticallyChangeAlpha;
@property (nonatomic, readonly) BOOL isRefreshing;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)configRefreshEventWithTarget:(id _Nonnull)target action:(SEL _Nonnull)action;
- (void)executeRefreshingCallback;
- (void)prepare;
- (void)beginRefreshing;
- (void)endRefreshing;
- (void)configScrollViewBounce:(UIView * _Nullable)_;
- (void)placeSubviews;
- (void)scrollViewContentOffsetDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)_;
- (void)scrollViewContentSizeDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)_;
- (void)scrollViewPanStateDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)_;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvRefreshFooter")
@interface NvRefreshFooter : NvRefreshComponent
@property (nonatomic) CGFloat ignoredScrollViewContentInsetBottom;
- (void)prepare;
- (void)configScrollViewBounce:(UIView * _Nullable)newSuperview;
- (void)endRefreshingWithNoMoreData;
- (void)resetNoMoreData;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end

@class UILabel;
@class UIActivityIndicatorView;

SWIFT_CLASS("_TtC16NvShortVideoCore19NvRefreshAutoFooter")
@interface NvRefreshAutoFooter : NvRefreshFooter
@property (nonatomic) CGFloat labelLeftInset;
@property (nonatomic, readonly, weak) UILabel * _Nullable stateLabel;
@property (nonatomic, readonly, weak) UIImageView * _Nullable arrowView;
@property (nonatomic, readonly, weak) UIActivityIndicatorView * _Nullable loadingView;
+ (NvRefreshAutoFooter * _Nonnull)footerForTarget:(id _Nonnull)target action:(SEL _Nonnull)action SWIFT_WARN_UNUSED_RESULT;
- (void)prepare;
- (void)placeSubviews;
- (void)configScrollViewBounce:(UIView * _Nullable)newSuperview;
- (void)scrollViewContentOffsetDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (void)scrollViewContentSizeDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


@class NSDate;

SWIFT_CLASS("_TtC16NvShortVideoCore15NvRefreshHeader")
@interface NvRefreshHeader : NvRefreshComponent
@property (nonatomic) CGFloat spacing;
@property (nonatomic, copy) NSString * _Nonnull lastUpdatedTimeKey;
@property (nonatomic, readonly, copy) NSDate * _Nonnull lastUpdatedTime;
@property (nonatomic) CGFloat ignoredScrollViewContentInsetTop;
- (void)prepare;
- (void)configScrollViewBounce:(UIView * _Nullable)newSuperview;
- (void)placeSubviews;
- (void)scrollViewContentOffsetDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvRefreshAutoHeader")
@interface NvRefreshAutoHeader : NvRefreshHeader
@property (nonatomic, readonly, weak) UILabel * _Nullable lastUpdatedTimeLabel;
@property (nonatomic, readonly, weak) UILabel * _Nullable stateLabel;
@property (nonatomic, readonly, weak) UIImageView * _Nullable arrowView;
@property (nonatomic, readonly, weak) UIActivityIndicatorView * _Nullable loadingView;
/// 文字距离圈圈、箭头的距离
@property (nonatomic) CGFloat labelLeftInset;
@property (nonatomic, copy) NSString * _Nonnull lastUpdatedTimeKey;
+ (NvRefreshAutoHeader * _Nonnull)headerForTarget:(id _Nonnull)target action:(SEL _Nonnull)action SWIFT_WARN_UNUSED_RESULT;
- (void)prepare;
- (void)placeSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvRefreshTrailer")
@interface NvRefreshTrailer : NvRefreshComponent
@property (nonatomic) CGFloat ignoredScrollViewContentInsetRight;
- (void)configScrollViewBounce:(UIView * _Nullable)newSuperview;
- (void)placeSubviews;
- (void)endRefreshingWithNoMoreData;
- (void)resetNoMoreData;
- (void)scrollViewContentOffsetDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (void)scrollViewContentSizeDidChangedWithChange:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore20NvRefreshAutoTrailer")
@interface NvRefreshAutoTrailer : NvRefreshTrailer
@property (nonatomic, readonly, weak) UILabel * _Nullable stateLabel;
@property (nonatomic, readonly, weak) UIImageView * _Nullable arrowView;
+ (NvRefreshAutoTrailer * _Nonnull)trailerForTarget:(id _Nonnull)target action:(SEL _Nonnull)action SWIFT_WARN_UNUSED_RESULT;
- (void)prepare;
- (void)placeSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end






@interface NvRefreshComponent (SWIFT_EXTENSION(NvShortVideoCore))
- (void)layoutSubviews;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)drawRect:(CGRect)rect;
@end








typedef SWIFT_ENUM(NSInteger, NvSelectAssetType, open) {
  NvSelectAssetTypeAll = 0,
  NvSelectAssetTypeVideo = 1,
  NvSelectAssetTypeImage = 2,
};


/// 统一管理方式 详见NvBottomMenuView 中实现的 NvSingleClipDisplayProtocol
SWIFT_CLASS("_TtC16NvShortVideoCore20NvSingleClipEditView")
@interface NvSingleClipEditView : NvEventView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore20NvSingleClipMenuView")
@interface NvSingleClipMenuView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end

@class UICollectionViewLayout;

@interface NvSingleClipMenuView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)_ numberOfItemsInSection:(NSInteger)_ SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)_ sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore8NvSlider")
@interface NvSlider : UISlider
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (CGRect)trackRectForBounds:(CGRect)_ SWIFT_WARN_UNUSED_RESULT;
- (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value SWIFT_WARN_UNUSED_RESULT;
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NvSourceFileInfo;

SWIFT_CLASS("_TtC16NvShortVideoCore8NvSource")
@interface NvSource : NSObject
/// the type of media file
/// remark:
/// 文件类型
@property (nonatomic) enum MeicamMediaType mediaType;
/// the info of original meida file
/// remark:
/// 源视频/图片文件信息
@property (nonatomic, strong) NvSourceFileInfo * _Nonnull file;
/// the info of media file reverted
/// remark:
/// 经过sdk倒放后的文件信息
@property (nonatomic, strong) NvSourceFileInfo * _Nullable reverseFile;
/// the set of draft identifiers, drafts has used the same meida file
/// remark:
/// 存储项目唯一标识
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull relatedProjects;
/// the id of the media file
/// remark:
/// 文件关联标识
@property (nonatomic, copy) NSString * _Nonnull resourceId;
/// Delete when no longer in use
/// remark:
/// 不再使用时，删除
@property (nonatomic) BOOL deleteWhenUnuse;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (NSString * _Nonnull)whc_TableName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)whc_SqlitePath SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)whc_SqliteVersion SWIFT_WARN_UNUSED_RESULT;
@end

@class NvSourceUploadInfo;
@class NvSourceM3u8Info;

/// 怎么判断是否已经上传过？
SWIFT_CLASS("_TtC16NvShortVideoCore16NvSourceFileInfo")
@interface NvSourceFileInfo : NSObject
/// the relative path for local file
/// remark:
/// 本地文件相对路径
@property (nonatomic, copy) NSString * _Nonnull path;
/// the path for network file
/// remark:
/// 网络文件链接
@property (nonatomic, strong) NvSourceUploadInfo * _Nullable uploadInfo;
/// the path for network file
/// remark:
/// 已下载的m3u8文件，有remotePath 不一定有m3u8Path，有m3u8Path 一定有remotePath
@property (nonatomic, strong) NvSourceM3u8Info * _Nullable m3u8Info;
/// the duration of meida file
/// remark:
/// 视频/图片文件的时长
/// -Note: the value for imageFile is -1, means unlimited time
@property (nonatomic) int64_t duration;
@property (nonatomic) enum NvFileSourceType fileSourceType;
@property (nonatomic) uint64_t fileSize;
/// the resolution of the media file
/// remark:
/// 视频/图片文件的宽高
@property (nonatomic) CGFloat imageWidth;
@property (nonatomic) CGFloat imageHeight;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore12NvSourceInfo")
@interface NvSourceInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore16NvSourceM3u8Info")
@interface NvSourceM3u8Info : NSObject
@property (nonatomic, copy) NSString * _Nonnull imageExtension;
@property (nonatomic, copy) NSString * _Nonnull urlPrefix;
@property (nonatomic) int64_t interval;
@property (nonatomic, copy) NSString * _Nonnull leftChannelUrl;
@property (nonatomic, copy) NSString * _Nonnull rightChannelUrl;
@property (nonatomic) int64_t duration;
@property (nonatomic) NSInteger height;
@property (nonatomic) NSInteger width;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 与file关联文件的类型
typedef SWIFT_ENUM(NSInteger, NvSourceRelatedFileType, open) {
  NvSourceRelatedFileTypeReverse = 0,
  NvSourceRelatedFileTypeFile = 1,
};


SWIFT_CLASS("_TtC16NvShortVideoCore18NvSourceUploadInfo")
@interface NvSourceUploadInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull remotePath;
@property (nonatomic, copy) NSString * _Nonnull m3u8FileName;
@property (nonatomic, copy) NSString * _Nonnull netResourceId;
@property (nonatomic, copy) NSString * _Nonnull netObjectId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore13NvStayStepper")
@interface NvStayStepper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvStickerModel")
@interface NvStickerModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvStickerModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvTemplateButton")
@interface NvTemplateButton : UIButton
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (void)layoutSubviews;
- (void)setImage:(UIImage * _Nullable)image forState:(UIControlState)state;
- (void)setTitle:(NSString * _Nullable)title forState:(UIControlState)state;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore19NvTemplateClipModel")
@interface NvTemplateClipModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NvTemplateEditClipSectionTheme;

SWIFT_CLASS("_TtC16NvShortVideoCore28NvTemplateEditClipTailorView")
@interface NvTemplateEditClipTailorView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadThemeWithTheme:(NvTemplateEditClipSectionTheme * _Nonnull)theme;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvTemplateInfo")
@interface NvTemplateInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore19NvTemplateInterface")
@interface NvTemplateInterface : NSObject
+ (UIViewController * _Nonnull)useTemplate:(NSString * _Nonnull)projectId SWIFT_WARN_UNUSED_RESULT;
+ (void)setupLog;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol NvTemplateMaterialCenterDelegate;

SWIFT_CLASS("_TtC16NvShortVideoCore24NvTemplateMaterialCenter")
@interface NvTemplateMaterialCenter : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NvTemplateMaterialCenter * _Nonnull sharedInstance;)
+ (NvTemplateMaterialCenter * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <NvTemplateMaterialCenterDelegate> _Nullable delegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSError;
@class NSMutableDictionary;

@interface NvTemplateMaterialCenter (SWIFT_EXTENSION(NvShortVideoCore))
- (void)findMaterialCategoryTypeWithType:(NSInteger)type succesddds:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))succesddds failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (void)requestListWithType:(NSInteger)type category:(NSInteger)category kind:(NSInteger)kind pageIndex:(NSInteger)pageIndex succesddds:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))succesddds failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (void)downloadMaterialWithUuid:(NSString * _Nonnull)uuid url:(NSString * _Nonnull)url targetFolder:(NSString * _Nonnull)targetFolder optParameters:(NSMutableDictionary * _Nonnull)optParameters progress:(void (^ _Nonnull)(float))progress success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (void)autoCutListMaterialWithParam:(NSDictionary<NSString *, id> * _Nonnull)param success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
@end

@class NSURLSessionDataTask;

SWIFT_PROTOCOL("_TtP16NvShortVideoCore32NvTemplateMaterialCenterDelegate_")
@protocol NvTemplateMaterialCenterDelegate
- (void)templateRequestListCategoryWithType:(NSInteger)type optionalRequestParameters:(NSMutableDictionary * _Nonnull)optionalRequestParameters success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (void)templateRequestListDataWithType:(NSInteger)type category:(NSInteger)category kind:(NSInteger)kind optionalRequestParameters:(NSMutableDictionary * _Nonnull)optionalRequestParameters pageIndex:(NSInteger)pageIndex success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (void)templateDownloadMaterialWithUuid:(NSString * _Nonnull)uuid url:(NSString * _Nonnull)url targetFolder:(NSString * _Nonnull)targetFolder optParameters:(NSMutableDictionary * _Nonnull)optParameters progress:(void (^ _Nonnull)(float))progress success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure;
- (NSURLSessionDataTask * _Nonnull)autoCutListMaterialWithParam:(NSDictionary<NSString *, id> * _Nonnull)param success:(void (^ _Nonnull)(NSArray * _Nonnull, BOOL, NSObject * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nullable))failure SWIFT_WARN_UNUSED_RESULT;
@end

@class NvTemplateHomeDataErrorTheme;

SWIFT_CLASS("_TtC16NvShortVideoCore20NvTemplateNoDataView")
@interface NvTemplateNoDataView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadThemeWithTheme:(NvTemplateHomeDataErrorTheme * _Nonnull)theme;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvTemplatePlayer")
@interface NvTemplatePlayer : UIView
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore31NvTemplatePreviewViewController")
@interface NvTemplatePreviewViewController : NvBaseTemplateViewController
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLoad;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface NvTemplatePreviewViewController (SWIFT_EXTENSION(NvShortVideoCore)) <NvThemeElement>
- (NSDictionary * _Nonnull)themeElements SWIFT_WARN_UNUSED_RESULT;
@end






@interface NvTemplatePreviewViewController (SWIFT_EXTENSION(NvShortVideoCore)) <NvAlbumViewControllerDelegate>
/// Handle the event of cutting the same item
/// remark:
/// 选择相册回调
/// \param controller album VC
///
/// \param templates selected resources
///
- (void)nvAlbumViewControllerWithController:(NvAlbumViewController * _Nonnull)_ selectTemplates:(NSArray<NvAlbumTemplateItem *> * _Nonnull)templates supportedRatio:(NSInteger)supportedRatio;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore18NvTemplateProducer")
@interface NvTemplateProducer : NSObject <NSCopying>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore30NvTemplateTailorViewController")
@interface NvTemplateTailorViewController : UIViewController
- (void)viewDidLoad;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end





@interface NvTemplateTailorViewController (SWIFT_EXTENSION(NvShortVideoCore)) <UIScrollViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)_;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)_;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore22NvTemplateTimelineIcon")
@interface NvTemplateTimelineIcon : NSObject <NvsImageGrabberDelegate>
- (void)onImageGrabbedArrived:(UIImage * _Nullable)image timestamp:(int64_t)_;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore24NvTemplateTransformModel")
@interface NvTemplateTransformModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSTextContainer;

SWIFT_CLASS("_TtC16NvShortVideoCore10NvTextView")
@interface NvTextView : UITextView
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer SWIFT_UNAVAILABLE;
@end




@interface NvTextView (SWIFT_EXTENSION(NvShortVideoCore)) <UITextViewDelegate>
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end

@protocol NvTimeVideoFxDataSourceDelegate;

SWIFT_CLASS("_TtC16NvShortVideoCore23NvTimeVideoFxDataSource")
@interface NvTimeVideoFxDataSource : NSObject
@property (nonatomic, weak) id <NvTimeVideoFxDataSourceDelegate> _Nullable delegate;
- (nonnull instancetype)initWithEditManager:(NvEditManager * _Nonnull)editManager OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nullable)addFxWithDisplayName:(NSString * _Nonnull)displayName packageId:(NSString * _Nonnull)packageId builtin:(BOOL)builtin SWIFT_WARN_UNUSED_RESULT;
- (void)revert;
- (void)forward;
- (void)removeCurrentFx;
- (void)cancel;
- (void)commit;
- (void)deselect;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NvTimeVideoFxDataSource (SWIFT_EXTENSION(NvShortVideoCore))
- (NSString * _Nullable)selectedItemIdentifier SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isDragEnabled SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isTapEnabled SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvTimeVideoFxDataSource (SWIFT_EXTENSION(NvShortVideoCore))
- (void)trackViewRangeSelectViewTimeDragChangedWithTime:(int64_t)time;
- (void)trackViewRangeSelectViewTimeDragEndWithTime:(int64_t)time;
@end


SWIFT_PROTOCOL("_TtP16NvShortVideoCore31NvTimeVideoFxDataSourceDelegate_")
@protocol NvTimeVideoFxDataSourceDelegate <NSObject>
- (void)selectedStateChanged:(NSString * _Nullable)packageId;
- (void)rollbackStateChangedWithRevertAble:(BOOL)revertAble forwardAble:(BOOL)forwardAble;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvTimelineClip")
@interface NvTimelineClip : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore17NvTimelineCommand")
@interface NvTimelineCommand : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





















SWIFT_CLASS("_TtC16NvShortVideoCore21NvTimelineDataManager")
@interface NvTimelineDataManager : NvEventObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end







SWIFT_CLASS("_TtC16NvShortVideoCore17NvTimelineFxModel")
@interface NvTimelineFxModel : MeicamFx
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore22NvTimelineFxUpdateInfo")
@interface NvTimelineFxUpdateInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore22NvTimelineFxUpdateItem")
@interface NvTimelineFxUpdateItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvTimelineIcon")
@interface NvTimelineIcon : NSObject <NvsImageGrabberDelegate>
- (void)onImageGrabbedArrived:(UIImage * _Nullable)image timestamp:(int64_t)_;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvTimelineModel")
@interface NvTimelineModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface NvTimelineModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore14NvTimelineView")
@interface NvTimelineView : NvEventView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC16NvShortVideoCore19NvTrackClipEditView")
@interface NvTrackClipEditView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore30NvVideoTrackPreviewContentView")
@interface NvVideoTrackPreviewContentView : NvEventView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15NvTrackListView")
@interface NvTrackListView : NvVideoTrackPreviewContentView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface NvTrackListView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDelegateFlowLayout>
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)_ sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvTrackListView (SWIFT_EXTENSION(NvShortVideoCore)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvTrackListView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface NvTrackListView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)_ numberOfItemsInSection:(NSInteger)_ SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore21NvTransitionDataModel")
@interface NvTransitionDataModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@interface NvTransitionDataModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore16NvVideoClipModel")
@interface NvVideoClipModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvVideoClipModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end








@interface NvVideoEditorViewController (SWIFT_EXTENSION(NvShortVideoCore)) <NvsStreamingContextDelegate>
/// the callback of sdk engine playback state
/// remark:
/// sdk 播放预览状态的回调
/// \param state the engin playback state
///
- (void)didStreamingEngineStateChanged:(NvsStreamingEngineState)state;
/// the callback of timeline positon
/// remark:
/// sdk 播放timeline的position回调
/// \param timeline timeline
///
/// \param position the playback position
///
- (void)didPlaybackTimelinePosition:(NvsTimeline * _Null_unspecified)timeline position:(int64_t)position;
- (void)didSeekingTimelinePosition:(NvsTimeline * _Null_unspecified)_ position:(int64_t)position;
/// the callback of playback EOF
/// remark:
/// 播放结束回调
/// \param timeline timeline
///
- (void)didPlaybackEOF:(NvsTimeline * _Null_unspecified)_;
@end




SWIFT_CLASS("_TtC16NvShortVideoCore17NvVideoFxRectView")
@interface NvVideoFxRectView : NvEventView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end



@interface NvVideoFxRectView (SWIFT_EXTENSION(NvShortVideoCore))
- (void)rectViewRotationBtTouchEndWithRectView:(NvRectView * _Nonnull)_;
- (void)rectViewWithRectView:(NvRectView * _Nonnull)_ rotate:(CGFloat)_ scale:(CGFloat)scale;
- (void)rectViewWithRectView:(NvRectView * _Nonnull)_ scaleX:(CGFloat)scaleX scaleY:(CGFloat)scaleY;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore19NvVideoTrackPreview")
@interface NvVideoTrackPreview : NvEventView <UIGestureRecognizerDelegate>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore12NvVolumeView")
@interface NvVolumeView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore16NvWaterMarkModel")
@interface NvWaterMarkModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NvWaterMarkModel (SWIFT_EXTENSION(NvShortVideoCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
@end
























SWIFT_CLASS("_TtC16NvShortVideoCore28PageCollectionViewFlowLayout")
@interface PageCollectionViewFlowLayout : UICollectionViewFlowLayout
- (void)prepareLayout;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore15PageContentView")
@interface PageContentView : UIView
@property (nonatomic, weak) id <PageEventHandleable> _Nullable eventHandler;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



@interface PageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <PageTitleViewDelegate>
- (void)titleView:(PageTitleView * _Nonnull)titleView didSelectAt:(NSInteger)index;
@end


@interface PageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface PageContentView (SWIFT_EXTENSION(NvShortVideoCore)) <UICollectionViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end


/// DNSPageView的事件回调，如果有需要，请让对应的childViewController遵守这个协议
/// DNSPageView event callbacks, if necessary, ask the corresponding childViewController to comply with this protocol
SWIFT_PROTOCOL("_TtP16NvShortVideoCore19PageEventHandleable_")
@protocol PageEventHandleable
@optional
/// 重复点击pageTitleView后调用
/// Call after repeatedly clicking pageTitleView
- (void)titleViewDidSelectSameTitle;
/// pageContentView的上一页消失的时候，上一页对应的controller调用
/// When the previous page of the pageContentView disappears, the controller corresponding to the previous page is called
- (void)contentViewDidDisappear;
/// pageContentView滚动停止的时候，当前页对应的controller调用
/// pageContentView When scrolling stops, the controller corresponding to the current page is called
- (void)contentViewDidEndScroll;
@end


SWIFT_CLASS("_TtC16NvShortVideoCore13PageTitleView")
@interface PageTitleView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end





@class NvCellTheme;

@interface PageTitleView (SWIFT_EXTENSION(NvShortVideoCore)) <NvThemeElement>
- (NSDictionary * _Nonnull)themeElements SWIFT_WARN_UNUSED_RESULT;
- (void)updateCellTheme:(NvCellTheme * _Nonnull)cellTheme selectedCellTheme:(NvCellTheme * _Nonnull)selectedCellTheme viewIndicate:(NSString * _Nonnull)viewIndicate;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore8PageView")
@interface PageView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC16NvShortVideoCore15PageViewManager")
@interface PageViewManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end










@interface UIDevice (SWIFT_EXTENSION(NvShortVideoCore))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isIphone7;)
+ (BOOL)isIphone7 SWIFT_WARN_UNUSED_RESULT;
@end







@interface UIScrollView (SWIFT_EXTENSION(NvShortVideoCore))
@property (nonatomic, strong) NvRefreshAutoHeader * _Nullable nv_header;
@property (nonatomic, strong) NvRefreshAutoFooter * _Nullable nv_footer;
@property (nonatomic, strong) NvRefreshAutoTrailer * _Nullable nv_trailer;
- (NSInteger)nv_totalDataCount SWIFT_WARN_UNUSED_RESULT;
@end







#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
def localPropertiesFileExist = localPropertiesFile.exists()
def flutterRoot = null
if (localPropertiesFileExist) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
    flutterRoot = localProperties.getProperty('flutter.sdk')
    if (flutterRoot == null) {
        throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
    }
}
def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}
def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
def flutterCompileSdkVersion = 34
if (localPropertiesFileExist) {
    apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
    flutterCompileSdkVersion = flutter.compileSdkVersion
}
android {
    compileSdkVersion flutterCompileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.meishe.duanshipindemo"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
    repositories {
        flatDir {
            dirs "libs"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", '*.aar'])
}

if (localPropertiesFileExist) {
    flutter {
        source '../..'
    }
}

